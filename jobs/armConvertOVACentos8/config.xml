<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>convert ARM Centos 8 OVA to VHD/AWS&#13;
&#13;
Please notice to run Azure you need to run first the jenkins job: armPrepareOVAforAMIorVHD</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>60</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PLATFORM</name>
          <description/>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>VHD</string>
              <string>VHDX</string>
              <string>AWS</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>ova_prop</propertiesFilePath>
        <scriptContent>if [[ ${PLATFORM} == "VHD" || ${PLATFORM} == "AWS" ]]
then
      echo "ovaPath=tempOVA" &gt; ova_prop
else
      echo "ovaPath=OVA" &gt;ova_prop
fi

</scriptContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>arm-ConvertOVACentos8</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>clean_workspace()
{
	rm -rf artifacts &amp;&amp; mkdir artifacts
    rm -rf ${WORKSPACE}/*.mf ${WORKSPACE}/*.ovf ${WORKSPACE}/*.vmdk ${WORKSPACE}/*.ova
}


open_ova()
{
	tar -xvf ${WORKSPACE}/ARM-Conf_${TAG}.ova
    tar -xvf ${WORKSPACE}/ARM-Router_${TAG}.ova
    for file in vhd_*;do mv $file ${file//vhd_};done
}
build_raw()
{

	qemu-img convert -f vmdk ${WORKSPACE}/ARM-Conf_${TAG}-disk1.vmdk -O raw ${WORKSPACE}/ARM-Conf_${TAG}.img
    qemu-img convert -f vmdk ${WORKSPACE}/ARM-Router_${TAG}-disk1.vmdk -O raw ${WORKSPACE}/ARM-Router_${TAG}.img
}

build_aws()
{
	export PATH=${PATH}:/usr/local/bin
	chmod 777 arm_build_aws.sh
    ./arm_build_aws.sh ARM-Conf_${TAG} ${TAG}
    ./arm_build_aws.sh ARM-Router_${TAG} ${TAG}
}
build_vhdx()
{
	cd ${WORKSPACE}/artifacts
	qemu-img convert -f raw ${WORKSPACE}/ARM-Conf_${TAG}.img -O vhdx -o subformat=dynamic ${WORKSPACE}/artifacts/ARM-Conf_${TAG}.vhdx
    zip ARM-Conf_${TAG}.zip ARM-Conf_${TAG}.vhdx
    rm -rf ${WORKSPACE}/artifacts/ARM-Conf_${TAG}.vhdx
    qemu-img convert -f raw ${WORKSPACE}/ARM-Router_${TAG}.img -O vhdx -o subformat=dynamic ${WORKSPACE}/artifacts/ARM-Router_${TAG}.vhdx
    zip ARM-Router_${TAG}.zip ARM-Router_${TAG}.vhdx
    rm -rf ${WORKSPACE}/artifacts/ARM-Router_${TAG}.vhdx
}
build_vhd()
{
    # convert image to fixed VHD format aligned to 1 MB
    MB=$((1024*1024))
    CONF_SIZE=$(qemu-img info -f raw --output json ${WORKSPACE}/ARM-Conf_${TAG}.img | gawk 'match($0, /"virtual-size": ([0-9]+),/, val) {print val[1]}')
    ROUTER_SIZE=$(qemu-img info -f raw --output json ${WORKSPACE}/ARM-Router_${TAG}.img | gawk 'match($0, /"virtual-size": ([0-9]+),/, val) {print val[1]}')
    echo "Configurator Image Size = $CONF_SIZE"
    echo "Router Image Size = $ROUTER_SIZE"
    CONF_ROUNDED_SIZE=$((($CONF_SIZE/$MB + 1)*$MB))
    ROUTER_ROUNDED_SIZE=$((($ROUTER_SIZE/$MB + 1)*$MB))
    echo "Configurator Rounded Image Size = $CONF_ROUNDED_SIZE"
    echo "Router Rounded Image Size = $ROUTER_ROUNDED_SIZE"
 
    echo "Resize image"
    qemu-img resize ${WORKSPACE}/ARM-Conf_${TAG}.img $CONF_ROUNDED_SIZE
 	qemu-img resize ${WORKSPACE}/ARM-Router_${TAG}.img $ROUTER_ROUNDED_SIZE
 
    echo "Convert image to VHD"
    qemu-img convert -f raw -O vpc -o subformat=fixed ${WORKSPACE}/ARM-Conf_${TAG}.img ${WORKSPACE}/artifacts/ARM-Conf_${TAG}.vhd
	qemu-img convert -f raw -O vpc -o subformat=fixed ${WORKSPACE}/ARM-Router_${TAG}.img ${WORKSPACE}/artifacts/ARM-Router_${TAG}.vhd
    
    cd ${WORKSPACE}/artifacts
    zip ARM-Conf_${TAG}.zip ARM-Conf_${TAG}.vhd
    zip ARM-Router_${TAG}.zip ARM-Router_${TAG}.vhd
}

if [[ ! -f prop ]];then touch prop;fi

open_ova
build_raw
clean_workspace
if [[ $PLATFORM == "VHDX" ]]
then
	build_vhdx
elif [[ $PLATFORM == "VHD" ]]
then
	build_vhd
elif [[ $PLATFORM == "AWS" ]]
then
	build_aws
fi

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>${WORKSPACE}/prop</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.3">
            <arg1>${PLATFORM}</arg1>
            <arg2>AWS</arg2>
            <ignoreCase>false</ignoreCase>
          </condition>
          <publisherList>
            <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
              <recipientList>Lina.Fine@audiocodes.com, Pavel.Smolyar@audiocodes.com, Moshe.Ben-Eliezer@audiocodes.com, Liav.Elias@audiocodes.com, cc:Shuky.Riechard@audiocodes.com, cc:ben.magriso@audiocodes.com</recipientList>
              <configuredTriggers>
                <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
                  <email>
                    <subject>$PROJECT_DEFAULT_SUBJECT</subject>
                    <body>$PROJECT_DEFAULT_CONTENT</body>
                    <recipientProviders>
                      <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
                    </recipientProviders>
                    <attachmentsPattern/>
                    <attachBuildLog>false</attachBuildLog>
                    <compressBuildLog>false</compressBuildLog>
                    <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
                    <contentType>project</contentType>
                  </email>
                </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
              </configuredTriggers>
              <contentType>default</contentType>
              <defaultSubject>ARM ${TAG} AMIs were created successfully</defaultSubject>
              <defaultContent>Arm Configurator: ${confAmiID}
Arm Router: ${routerAmiID}</defaultContent>
              <attachmentsPattern/>
              <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
              <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
              <attachBuildLog>false</attachBuildLog>
              <compressBuildLog>false</compressBuildLog>
              <replyTo>$DEFAULT_REPLYTO</replyTo>
              <from/>
              <saveOutput>false</saveOutput>
              <disabled>false</disabled>
            </hudson.plugins.emailext.ExtendedEmailPublisher>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.38">
      <patterns>
        <hudson.plugins.ws__cleanup.Pattern>
          <pattern>**</pattern>
          <type>INCLUDE</type>
        </hudson.plugins.ws__cleanup.Pattern>
      </patterns>
      <deleteDirs>true</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    "files": [
        {
            "pattern": "${WORKSPACE}/artifacts/ARM-Conf_${TAG}*.zip",
            "target": "libs-release-local/com/ac/arm/${PLATFORM}/${TAG}/ARM-Conf_${TAG}/",
             "recursive": "false"
        },
        {
            "pattern": "${WORKSPACE}/artifacts/ARM-Router_${TAG}*.zip",
            "target": "libs-release-local/com/ac/arm/${PLATFORM}/${TAG}/ARM-Router_${TAG}/",
             "recursive": "false"
        }   
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    "files": [
        {
            "pattern": "libs-release-local/com/ac/arm/${ovaPath}/${TAG}/ARM-Conf_${TAG}/ARM-Conf_${TAG}.ova",
            "target": "${workspace}/",
            "flat": "true"
        },
        {
            "pattern": "libs-release-local/com/ac/arm/${ovaPath}/${TAG}/ARM-Router_${TAG}/ARM-Router_${TAG}.ova",
            "target": "${workspace}/",
            "flat": "true"
        },
        {
            "pattern": "Devops/ARM/OVA/centOS8/arm_build_aws.sh",
            "target": "${workspace}/",
            "flat": "true"
        }
    ]
}</spec>
      </downloadSpec>
      <deployPattern/>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectBuildWrapper plugin="envinject@2.3.0">
      <info>
        <propertiesContent>artifactory_user=admin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQjpwn9mxVDjkJumhhtSdcfWyyvWbr749h0nbwRsyQ6Z0=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}__${TAG}__${PLATFORM}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>