<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>Create "ReleaseNote.txt" &#13;
activated by new TAG on SFB “3.0.0.GA”, “3.0.0_450HD”, “3.0.1”, 3.0.2”, “3.0.4” and  "3.0.6"&#13;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFNAME</name>
          <description>if triggering this job manually then complete the tag</description>
          <defaultValue>refs/tags/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_PROJECT</name>
          <description/>
          <defaultValue>IPP/SFB</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit:29418/IPP/SFB</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${GERRIT_REFNAME}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout>
        <deleteUntrackedNestedRepositories>false</deleteUntrackedNestedRepositories>
      </hudson.plugins.git.extensions.impl.CleanBeforeCheckout>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>true</shallow>
        <noTags>false</noTags>
        <reference/>
        <depth>50</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
    </extensions>
  </scm>
  <quietPeriod>90</quietPeriod>
  <scmCheckoutRetryCount>6</scmCheckoutRetryCount>
  <assignedNode>ipp-centos7.4</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.30.5">
      <spec/>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>IPP/SFB</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>refs/tags/3.*</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>refs/tags/4.*</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel/>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames/>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>PLAIN</commentTextParameterMode>
      <buildStartMessage/>
      <buildFailureMessage/>
      <buildSuccessfulMessage/>
      <buildUnstableMessage/>
      <buildNotBuiltMessage/>
      <buildUnsuccessfulFilepath/>
      <customUrl/>
      <serverName>gerritHost</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginRefUpdatedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL/>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>IPP_VER=`echo $GERRIT_REFNAME | awk -F/ '{print $NF}'`

IPP_VER_PREV=`git describe --first-parent --tags --abbrev=0 HEAD^` 

FULL_BRANCH_NAME=`git branch --no-color -r --contains HEAD | grep -v -e '-&gt;' | grep -v private | head -1`
#FULL_BRANCH_NAME="origin/release/3.2.0/3.2.0.1003.X"

if [[ $FULL_BRANCH_NAME == "" ]]; then 
  echo Branch name not found...   exit with error; 
  exit 1  
fi

GERRIT_BRANCH=`echo $FULL_BRANCH_NAME | awk -F'/' '{print $NF}'`
if [[ $FULL_BRANCH_NAME =~ (release|feature) ]]; then
  GERRIT_BRANCH=`echo $FULL_BRANCH_NAME | sed -r 's|.*(release\|feature/.*)|\1|'`
fi
#we deploy to artifactory to a specific folder $IPP_MAJOR_VER
IPP_MAJOR_VER=${GERRIT_BRANCH}

# If $GERRIT_BRANCH == "3.0.0_450HD", replace the 3.0.0 by the 3 first digits in the TAG name (probably: 3.0.1)
if [ $GERRIT_BRANCH == "3.0.0_450HD" ]; then IPP_MAJOR_VER="$(echo ${IPP_VER} | cut -d. -f1,2,3)_450HD"; fi
if [ $GERRIT_BRANCH == "3.0.0.GA" ]; then IPP_MAJOR_VER="3.0.0"; fi;

#where to start history from?
if [ $GERRIT_BRANCH == "3.0.1" ]; then IPP_FIRST_PREV="3.0.1.41"
else if [ $GERRIT_BRANCH == "3.1.0" ]; then IPP_FIRST_PREV="3.1.0.1"
else if [ $GERRIT_BRANCH == "3.2" ]; then IPP_FIRST_PREV="3.2.0.1"
else if [ $GERRIT_BRANCH == "3.4.0" ]; then IPP_FIRST_PREV="3.4.0.1"
else if [ $GERRIT_BRANCH == "master" ]; then IPP_FIRST_PREV="3.4.1.1"
else if [[ $FULL_BRANCH_NAME =~ (release|feature) ]];  then IPP_FIRST_PREV=$IPP_VER_PREV
else exit 1;
fi fi; fi; fi; fi; fi;

echo git log --oneline --decorate ${IPP_FIRST_PREV}..${IPP_VER} &gt; UnixreleaseNotes.txt
git log --oneline --decorate --no-color ${IPP_FIRST_PREV}..${IPP_VER} &gt;&gt; UnixreleaseNotes.txt
sed 's/$'"/`echo \\\r`/" UnixreleaseNotes.txt &gt; releaseNotes.txt

echo IPP_VER=${IPP_VER} &gt; generated_ipp_version.properties
echo IPP_MAJOR_VER=${IPP_MAJOR_VER} &gt;&gt; generated_ipp_version.properties
echo GERRIT_BRANCH=${GERRIT_BRANCH} &gt;&gt; generated_ipp_version.properties

AuthorCommitter=`git log --first-parent --pretty=format:"%aN%n%cN" $IPP_VER_PREV..$IPP_VER | grep -v Jenkins | sort -u | sed s/$/\;/g`
RN=""
while read -r hash; do 
  subject=$(git log --pretty=format:"%s" $hash -n1 | sed 's/\"/`/g; s/---/_/g; s/::/;/g')
  Jira=$(git log --pretty=format:"%B" $hash -n1 | grep "\[I" | sed 's/^\[I/I/; s/\].*//')
  RN+=---$subject::$hash::$Jira
done &lt;&lt;&lt; "$(git log --first-parent --reverse --pretty=format:"%h" $IPP_VER_PREV..$IPP_VER)"

EMAIL=`git log --pretty=format:"%ae%n%ce" $IPP_VER_PREV..$IPP_VER | grep -v devops | sort -u`
GERRIT_PROJECT=`echo $GIT_URL | cut -d/ -f4,5`
DATE=`git for-each-ref --format '%(taggerdate)' refs/tags/$IPP_VER`
echo RN=${RN} &gt;&gt; generated_ipp_version.properties
echo GERRIT_HOST=$(echo $GIT_URL | cut -d@ -f2 | cut -d: -f1) &gt;&gt; generated_ipp_version.properties
echo EMAIL=${EMAIL} &gt;&gt; generated_ipp_version.properties
echo PROJECT=${GERRIT_PROJECT} &gt;&gt; generated_ipp_version.properties
echo DATE=${DATE} &gt;&gt; generated_ipp_version.properties
echo AuthorCommitter=${AuthorCommitter} &gt;&gt; generated_ipp_version.properties

#replace backslash with space, because it is not a valid properties file if it includes a backslash char
#it save a "&lt;name&gt;.bak" backup file for debug if we will encounter problems
sed -i.bak 's/\\/ /g' generated_ipp_version.properties

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>generated_ipp_version.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration plugin="Parameterized-Remote-Trigger@3.1.2">
      <remoteJenkinsName>test-jenkins</remoteJenkinsName>
      <auth2 class="org.jenkinsci.plugins.ParameterizedRemoteTrigger.auth2.NullAuth"/>
      <shouldNotFailBuild>true</shouldNotFailBuild>
      <trustAllCertificates>false</trustAllCertificates>
      <overrideTrustAllCertificates>false</overrideTrustAllCertificates>
      <preventRemoteBuildQueue>false</preventRemoteBuildQueue>
      <httpPostReadTimeout>30000</httpPostReadTimeout>
      <httpGetReadTimeout>10000</httpGetReadTimeout>
      <pollInterval>10</pollInterval>
      <blockBuildUntilComplete>false</blockBuildUntilComplete>
      <job>Update-Jira</job>
      <token>Jira-update</token>
      <parameters>NEWTAG=$IPP_VER
RN=$RN
GERRIT_HOST=$GERRIT_HOST
EMAIL=$EMAIL
PROJECT=$PROJECT
DATE=$DATE
GERRIT_BRANCH=$GERRIT_BRANCH
AuthorCommitter=$AuthorCommitter</parameters>
      <enhancedLogging>true</enhancedLogging>
      <loadParamsFromFile>false</loadParamsFromFile>
      <parameterFile/>
      <maxConn>5</maxConn>
      <useCrumbCache>true</useCrumbCache>
      <useJobInfoCache>true</useJobInfoCache>
      <abortTriggeredJob>false</abortTriggeredJob>
      <disabled>false</disabled>
      <hostPermits/>
    </org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.3">
            <command>if [[ "$GERRIT_BRANCH" != *"3.0.0.GA"* ]] &amp;&amp; [[ "$GERRIT_BRANCH" != *"3.0.1"* ]]; then exit 1; fi
</command>
          </condition>
          <publisherList>
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.36">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs>
                    <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                      <properties>NEWTAG=${IPP_VER}
BUILD_BRANCH=${GERRIT_BRANCH}</properties>
                      <textParamValueOnNewLine>false</textParamValueOnNewLine>
                    </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                  </configs>
                  <projects>ippBuild_3.0.X_405_Lync</projects>
                  <condition>UNSTABLE_OR_BETTER</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                  <triggerFromChildProjects>false</triggerFromChildProjects>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.3">
            <command>if [[ "$GERRIT_BRANCH" != *"3.1."* ]] &amp;&amp; [[ "$GERRIT_BRANCH" != *"3.2"* ]] &amp;&amp; [[ "$GERRIT_BRANCH" != *"3.4.0"* ]] &amp;&amp; [[ "$GERRIT_BRANCH" != "master" ]]; then exit 1; fi
</command>
          </condition>
          <publisherList>
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.36">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs>
                    <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                      <properties>NEWTAG=${IPP_VER}
BUILD_BRANCH=${GERRIT_BRANCH}</properties>
                      <textParamValueOnNewLine>false</textParamValueOnNewLine>
                    </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                  </configs>
                  <projects>ippCentos7.4-buildSIM</projects>
                  <condition>UNSTABLE_OR_BETTER</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                  <triggerFromChildProjects>false</triggerFromChildProjects>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.3">
            <command>if [[ "$GERRIT_BRANCH" == *"3.0"* ]]
then
exit 1
fi</command>
          </condition>
          <publisherList>
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.36">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs>
                    <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                      <properties>TAG=${IPP_VER}
BUILD_BRANCH=${GERRIT_BRANCH}</properties>
                      <textParamValueOnNewLine>false</textParamValueOnNewLine>
                    </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                  </configs>
                  <projects>ippBuild_SFB</projects>
                  <condition>UNSTABLE_OR_BETTER</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                  <triggerFromChildProjects>false</triggerFromChildProjects>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.3">
            <command>if [[ "$GERRIT_BRANCH" != *"3.0"* ]]
then
exit 1
fi</command>
          </condition>
          <publisherList>
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.36">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs>
                    <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                      <properties>NEWTAG=${IPP_VER}
BUILD_BRANCH=${GERRIT_BRANCH}</properties>
                      <textParamValueOnNewLine>false</textParamValueOnNewLine>
                    </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                  </configs>
                  <projects>ippBuild_SFB_before3.1</projects>
                  <condition>UNSTABLE_OR_BETTER</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                  <triggerFromChildProjects>false</triggerFromChildProjects>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>yossim,Shuky.Riechard</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>.*(ClosedChannel|no workspace from node|Workspace is not accessible|node is offline|Error fetching remote|JNLP4-connect connection|ExceedRetryLimitException).*</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>180</delay>
      </delay>
      <maxSchedule>7</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText>ipp-release</keyFromText>
          <keyFromSelect>ext-release-local</keyFromSelect>
          <dynamicMode>true</dynamicMode>
        </deployReleaseRepository>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>false</useSpecs>
      <uploadSpec>
        <spec/>
      </uploadSpec>
      <downloadSpec>
        <spec/>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/releaseNotes.txt=&gt;com/ac/ipp/SFB/${IPP_MAJOR_VER}/${IPP_VER}</deployPattern>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER} - ${IPP_VER}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>