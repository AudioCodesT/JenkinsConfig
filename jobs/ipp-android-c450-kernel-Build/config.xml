<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>triggered by Submit in project C450-linux-kernel&#xd;
1. compile kernel on project C450-linux-kernel&#xd;
2. copy the binaries created from previous step to android directory&#xd;
3. enter to android directory and create from the binaries --&gt; uimage-dtb&#xd;
4. compile full android&#xd;
5. create new commit  in project: IPP/Android/device_dspg_dvg101-kernel with the new binaries and update the submodule to current change (PATCHSET_REVISION)&#xd;
6. push commit directly to git</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>60</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit:29418/IPP/C450/C450-linux-kernel</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
      <hudson.plugins.git.extensions.impl.BuildChooserSetting>
        <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser" plugin="gerrit-trigger@2.27.5">
          <separator>#</separator>
        </buildChooser>
      </hudson.plugins.git.extensions.impl.BuildChooserSetting>
    </extensions>
  </scm>
  <assignedNode>ipp-android-dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.27.5">
      <spec></spec>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>IPP/C450/C450-linux-kernel</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>PLAIN</compareType>
              <pattern>c450hd_android_linux_kernel</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>PLAIN</compareType>
              <pattern>testBranch</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel></notificationLevel>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames></dependencyJobsNames>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>BASE64</commentTextParameterMode>
      <buildStartMessage></buildStartMessage>
      <buildFailureMessage></buildFailureMessage>
      <buildSuccessfulMessage></buildSuccessfulMessage>
      <buildUnstableMessage></buildUnstableMessage>
      <buildNotBuiltMessage></buildNotBuiltMessage>
      <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
      <customUrl></customUrl>
      <serverName>gerritHost</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginChangeMergedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL></triggerConfigURL>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -xe

# we build only if jenkins checked out on the last commit in branch, else exit 0
LastGerritCommitHash=$( git ls-remote  | grep refs/heads/$GERRIT_BRANCH  | cut -f 1 | head -n 1 )
echo $LastGerritCommitHash
echo $GERRIT_PATCHSET_REVISION
if [[ &quot;$LastGerritCommitHash&quot; == &quot;$GERRIT_PATCHSET_REVISION&quot; ]]
then
    file_path=&quot;${WORKSPACE}/binaries_list.txt&quot;
    #compile c450hd kernel
    source make_c450hd_kernel.sh
    
    # enter android folder
    cd ../ipp-android
    rm -f *.zip
    repo init -u ssh://jenkins@gerrit:29418/IPP/Android/repo_manifests -b master
    repo sync -c --no-tags --no-clone-bundle -j16 --force-sync
    
    #copy all files from list to android dir (ipp-android-review/....)
    tail -n +1 ${file_path} | while IFS= read -r line
    do
        sourcePath=$(echo $line | cut -d&apos; &apos; -f1)
        sourcePath=${WORKSPACE}/${sourcePath}
        destPath=$(echo $line | cut -d&apos; &apos; -f2)
        destPath=${destPath}
        cp ${sourcePath} ${destPath}
    done
    
    uImage_filename=$(cat ${file_path} | head -1 | tail -1)
    uImage_filename=$(echo $uImage_filename | cut -d&apos; &apos; -f1)
    uImage_filename=${uImage_filename##*/}
    dvf101_filename=$(cat ${file_path} | head -2 | tail -1)
    dvf101_filename=$(echo $dvf101_filename | cut -d&apos; &apos; -f1)
    dvf101_filename=${dvf101_filename##*/}
    cat device/dspg/c450hd-kernel/${uImage_filename} device/dspg/c450hd-kernel/divider.txt device/dspg/c450hd-kernel/${dvf101_filename} &gt; device/dspg/c450hd-kernel/uImage-dtb
    
    #run android compilation
#    ./build/tools/make_c450hd.sh --zip-images
    
    
    
    #clone IPP/Android/device_dspg_dvg101-kernel repository and create there a new commit
    cd ${WORKSPACE}
    if [[ -e device_dspg_dvf101-kernel ]]
    then
    rm -rf device_dspg_dvf101-kernel
    fi
    git clone ssh://jenkins@gerrit:29418/IPP/Android/device_dspg_dvf101-kernel
    cd device_dspg_dvf101-kernel
    git checkout master || echo &quot;already on master&quot;
    #update submodule to the current GERRIT_PATCHSET_REVISION of this change
    git submodule init
    git submodule update
    cd Source
    git checkout ${GERRIT_PATCHSET_REVISION}
    cd ..
    
    #copy files to IPP/Android/device_dspg_dvg101-kernel
    tail -n +1 ${file_path} | while IFS= read -r line
    do
        sourcePath=$(echo $line | cut -d&apos; &apos; -f1)
        sourcePath=${WORKSPACE}/${sourcePath}
        cp ${sourcePath} .
    done
    cat ${uImage_filename} divider.txt ${dvf101_filename} &gt; uImage-dtb
    
    #get all commit messages between the last commit in  IPP/Android/device_dspg_dvg101-kernel (${commitToCompareWith}) to
    #all commits that were submitted in IPP/C450/C450-linux-kernel
    commit_msg_in_kernel=$(git log --format=%s -n 1 HEAD)
    commitToCompareWith=$(echo $commitToCompareWith | cut -d&apos;:&apos; -f2-)
    commiterName=$(echo $commitToCompareWith | cut -d&apos;:&apos; -f1)
    #enter to C450-linux-kernel to check all the commits messages that submited
    cd ..
    index=1
	last_commit=&quot;${GERRIT_CHANGE_OWNER_NAME}: ${GERRIT_CHANGE_SUBJECT}&quot;
	commit_msg=&quot;${GERRIT_CHANGE_SUBJECT}&quot;
    commitMsgs=&quot;&quot;
    #add all the commits messages to String until it will be equal to the last commit in  IPP/Android/device_dspg_dvg101-kernel
    while [[ &quot;${commit_msg}&quot; != &quot;${commitToCompareWith}&quot; ]]
	do
		commit_msg=$(git log --format=%s -n 1 HEAD~${index})
       commiterName=$(git log --format=%an -n 1 HEAD~${index})
		((index+=1))
		if [[ &quot;${commit_msg}&quot; != &quot;${commitToCompareWith}&quot; ]]
		then
			commitMsgs=&quot;$(printf &quot;${commitMsgs}\n${commiterName}: ${commit_msg}&quot;)&quot;
		fi
	done
    echo &quot;******************************&quot;
    printf &apos;%s&apos; &quot;$commitMsgs&quot;
    echo &quot;******************************&quot;
    
    #create the new commit
    cd device_dspg_dvf101-kernel
    git add .
    git commit -m &quot;${last_commit}&quot; -m &quot;${commitMsgs}&quot;
#	git push
    
    
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.21">
      <recipients>ben.magriso</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>ipp-android-Create-Tag</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jpass</name>
          <value>{AQAAABAAAAAQD6CSDOHfP6IkSd2ATy9C4txVJ4gsIYZesrohYlkbMpI=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</project>