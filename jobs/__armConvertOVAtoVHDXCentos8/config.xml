<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>armConvertOVAtoVHD&#13;
triggered by the first job&#13;
purpose: convert temp OVA to vhdx&#13;
steps:&#13;
1. download from Arti&#13;
2. with power shell commands unzip ova and convert&#13;
3. deploy vhdx to artifactory&#13;
4. send email with links&#13;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Web-UI-Win-Dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!C:\Program Files\Git\bin\bash --login -i
alias sz='C:\Program Files\7-Zip\7z.exe'
sz x -o"$WORKSPACE" "${WORKSPACE}/ovaFiles/ARM-Conf_${TAG}.ova"
sz x -o"$WORKSPACE" "${WORKSPACE}/ovaFiles/ARM-Router_$TAG.ova"
#/c/bin/qemu-img/qemu-img.exe convert -O vhdx -o subformat=dynamic ${WORKSPACE}/ARM-Conf_${TAG}-disk1.vmdk ${WORKSPACE}/ARM-Conf_${TAG}.vhdx
#/c/bin/qemu-img/qemu-img.exe convert -O vhdx -o subformat=dynamic ${WORKSPACE}/ARM-router_${TAG}-disk1.vmdk ${WORKSPACE}/ARM-Router_${TAG}.vhdx 

# convert image to fixed VHD format aligned to 1 MB
MB=$((1024*1024))
CONF_SIZE=$(qemu-img info -f vmdk --output json ${WORKSPACE}/ARM-Conf_${TAG}-disk1.vmdk | gawk 'match($0, /"virtual-size": ([0-9]+),/, val) {print val[1]}')
ROUTER_SIZE=$(qemu-img info -f vmdk --output json ${WORKSPACE}/ARM-router_${TAG}-disk1.vmdk | gawk 'match($0, /"virtual-size": ([0-9]+),/, val) {print val[1]}')
echo "Conf Size = $CONF_SIZE"
echo "Router Size = $ROUTER_SIZE"
CONF_ROUNDED_SIZE=$(((CONF_SIZE/$MB + 1)*$MB))
ROUTER_ROUNDED_SIZE=$(((CONF_SIZE/$MB + 1)*$MB))
echo "Resize disk"
qemu-img resize ${WORKSPACE}/ARM-Conf_${TAG}-disk1.vmdk $CONF_ROUNDED_SIZE
qemu-img resize ${WORKSPACE}/ARM-router_${TAG}-disk1.vmdk $ROUTER_ROUNDED_SIZE
echo "convert to VHD"
qemu-img convert -f vmdk -O vpc -o subformat=fixed ${WORKSPACE}/ARM-Conf_${TAG}-disk1.vmdk ${WORKSPACE}/ARM-Conf_${TAG}.vhd
qemu-img convert -f vmdk -O vpc -o subformat=fixed ${WORKSPACE}/ARM-router_${TAG}-disk1.vmdk ${WORKSPACE}/ARM-Router_${TAG}.vhd
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>ben.magriso</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
      <recipientList>cc:Shuky.Riechard@audiocodes.com,cc:ben.magriso@audiocodes.com,Lina.Fine@audiocodes.com, Pavel.Smolyar@audiocodes.com</recipientList>
      <contentType>default</contentType>
      <defaultSubject>ARM Router &amp; Configurator ${TAG} VHDX created successfully</defaultSubject>
      <defaultContent>ARM Router ${TAG} VHDX:
https://artifactory/libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Router_${TAG}

ARM Configurator ${TAG} VHDX:
https://artifactory/libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Conf_${TAG}
</defaultContent>
      <attachmentsPattern/>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.38">
      <patterns class="empty-list"/>
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.38">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    "files": [
        {
            "pattern": "${WORKSPACE}/ARM-Conf_${TAG}.vhdx",
            "target": "libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Conf_${TAG}/",
             "recursive": "false"
        },
        {
            "pattern": "${WORKSPACE}/ARM-Router_${TAG}.vhdx",
            "target": "libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Router_${TAG}/",
             "recursive": "false"
        }   
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    "files": [
        {
            "pattern": "libs-release-local/com/ac/arm/OVA/${TAG}/ARM-Conf_${TAG}/ARM-Conf_${TAG}.ova",
            "target": "${workspace}/ovaFiles/",
            "flat": "true"
        },
        {
            "pattern": "libs-release-local/com/ac/arm/OVA/${TAG}/ARM-Router_${TAG}/ARM-Router_${TAG}.ova",
            "target": "${workspace}/ovaFiles/",
            "flat": "true"
        }
    ]
}</spec>
      </downloadSpec>
      <deployPattern>VHD/ARM-Conf_${TAG}.vhdx=&gt;com/ac/arm/VHD/${TAG}/ARM-Conf_${TAG}
VHD/ARM-Router_${TAG}.vhdx=&gt;com/ac/arm/VHD/${TAG}/ARM-Router_${TAG}</deployPattern>
      <resolvePattern>libs-release-local:com/ac/arm/tempOVA/${TAG}/ARM-Conf_${TAG}/ARM-Conf_${TAG}.ova=&gt;${workspace}/ovaFiles
libs-release-local:com/ac/arm/tempOVA/${TAG}/ARM-Router_${TAG}/ARM-Router_${TAG}.ova=&gt;${workspace}/ovaFiles
</resolvePattern>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}__${TAG}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>