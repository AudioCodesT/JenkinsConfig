<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>triggered by the job “ipp_GTest_SIM”&#13;
1. download logs for all 4 ipp models&#13;
2. run grep per model, per gtest, per valgrind&#13;
3. vote aggregated to GTest label&#13;
4. vote aggregated to Check-Valgrind label&#13;
5. post message to gerrit if failed with the models name and which test it failed (valgrind or gtest)</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_PROJECT</name>
          <description/>
          <defaultValue>IPP/SFB</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description/>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description/>
          <defaultValue>refs/changes/38/40238/7</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_CHANGE_ID</name>
          <description/>
          <defaultValue>If86a7e80e64766764923804c469f9e3f85de3ec1</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_PATCHSET_REVISION</name>
          <description/>
          <defaultValue>1b56e4d5485d5c77d6dd806aae48ba8af9601848</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_HOST</name>
          <description/>
          <defaultValue>gerrit</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.3.0">
      <info>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>ipp-centos7.4</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># parameters to post message and score to gerrit
CURL="curl -kn -u jenkins:${jenkins_pass} --silent"
base=https://$GERRIT_HOST/a/changes
id=${GERRIT_PROJECT}~${GERRIT_BRANCH}~${GERRIT_CHANGE_ID}
idEscaped=${id////%2F}
endpoint="/$idEscaped/revisions/$GERRIT_PATCHSET_REVISION/review"

#parameters to check valgrind and gtest score
artifactory_host=artifactory
User="$artifactory_user:$artifactory_password"
NEWLINE=$'\n'
gtest_message_to_send=""
valgrind_message_to_send=""
gtestFailedAtLeastOnce="False"
valgrindFailedAtLeastOnce="False"
artifactory_url="https://$artifactory_host/webapp/#/artifacts/browse/tree/General/ipp-review/SFB/${GERRIT_BRANCH}/${TARGET}/GTestLogs"
models=("405HD__SIM" "430HD__SIM" "440HD__SIM" "450HD__SIM")
# run on all models and check if it passed or failed by grep, if failed at least one time, give score -1.
for model in ${models[@]}
do

  #fetch valgrind Errors
  valgrindRetValue=0
  grep -E 'ERROR SUMMARY: [1-9]+ errors' ${model}* || valgrindRetValue=$?
  if [[ "$valgrindRetValue" == "0" ]]
  then
  valgrindSign="-1"
  valgrind_message_to_send="${valgrind_message_to_send}${model} "
  valgrindFailedAtLeastOnce="True"
  elif [[ "$valgrindRetValue" == "1" ]]
  then
  valgrindSign="1"
  else
  echo "ERROR not found GTestLogs Files"
  exit 1
  fi
  
  
  #fetch gtest errors
  gtestRetValue=0
  grep -E '[1-9]+ FAILED TEST' ${model}* || gtestRetValue=$?
  if [[ "$gtestRetValue" == "0" ]]
  then
  gtestSign="-1"
  gtest_message_to_send="${gtest_message_to_send}${model} "
  gtestFailedAtLeastOnce="True"
  elif [[ "$gtestRetValue" == "1" ]]
  then
  gtestSign="1"
  successfull_passed_count=$(grep -E 'PASSED' ${model}* | wc -l)
  num_of_files=$(ls -al ${model}* | wc -l)
  if [[ $successfull_passed_count != $num_of_files ]]
  then
  		gtestSign="-1"
        gtest_message_to_send="${gtest_message_to_send}${model} "
  		gtestFailedAtLeastOnce="True"
  fi
  else
  echo "ERROR not found GTestLogs Files"
  exit 1
  fi
done
#messages to post to gerrit
gtest_message_to_send="${gtest_message_to_send} GTest Failed.${NEWLINE}You can see the logs here: ${artifactory_url}"
valgrind_message_to_send="${valgrind_message_to_send} valgrind Failed.${NEWLINE}You can see the logs here: ${artifactory_url}"

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.2.5">
      <script>#!/bin/sh 
TARGET=`echo $GERRIT_REFSPEC | sed 's:refs/changes/../::; s:/:-:g'`
echo "TARGET=${TARGET}"
</script>
      <scriptType>unixScript</scriptType>
      <runOnlyOnParent>false</runOnlyOnParent>
      <hideEnvironmentVariablesValues>false</hideEnvironmentVariablesValues>
    </com.lookout.jenkins.EnvironmentScript>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec/>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    "files": [
        {
            "pattern": "ipp-review/SFB/${GERRIT_BRANCH}/${TARGET}/test_GTestLogs/*",
            "target": "${workspace}/",
             "flat": "true"
        }   
    ]
}</spec>
      </downloadSpec>
      <deployPattern/>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectBuildWrapper plugin="envinject@2.3.0">
      <info>
        <propertiesContent>artifactory_user=jenkins</propertiesContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQyL2IUcGTlaIaeAeLLkLypeH7zxqaN7TXdg7YMPsSrMs=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>jenkins_pass</name>
          <value>{AQAAABAAAAAQl3XzzZzTCQ/11c1axxRbXR8K4Eui2N0qw9H8m7feum8=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}__branch:${GERRIT_BRANCH}__change:${GERRIT_REFSPEC}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>