<?xml version="1.1" encoding="UTF-8" standalone="no"?><com.tikal.jenkins.plugins.multijob.MultiJobProject plugin="jenkins-multijob-plugin@1.33">
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>15</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REFSPEC</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MODEL</name>
          <description/>
          <defaultValue>C450</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IMAGENAMES</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ServerType</name>
          <description/>
          <defaultValue>Lync</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>PC2RUN</name>
          <description/>
          <allowedSlaves/>
          <defaultSlaves/>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>1</maxConcurrentPerNode>
      <maxConcurrentTotal>4</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>true</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>${PC2RUN}</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!c:\cygwin\bin\bash --login

echo $NODE_NAME

cd C:/IpPhoneAutomation/ATA &amp;&amp; tclsh AtaExec.tcl -stop all

net use

ATA_Home=C:/IpPhoneAutomation/ATA

ls $ATA_Home/Resources/Firmwares/UC*_${IMAGENAMES}*.*

if ! net use | grep -iqE "OK .* z:.*Firmwares"; then
    echo confige again Z: ----------------------
    net use z: /delete
    net use z: "\\\\10.59.0.87\\Firmwares"
fi

if [ `ls $ATA_Home/Resources/Firmwares/UC*_${IMAGENAMES}.* 2&gt; /dev/null | wc -l` -eq 0 ]; then
  echo "the images files were not found (ClosedChannel)... try again"
  exit 1;
fi

if [ "$REFSPEC" == "" ]; then
  echo RunPhases=1 &gt; ${WORKSPACE}/properties.txt
  exit 0;
fi

change=`echo $REFSPEC | cut -d/ -f4`
ps=`echo $REFSPEC | cut -d/ -f5`

echo ATA_Home=$ATA_Home &gt;&gt; ${WORKSPACE}/properties.txt

echo Results: &gt; $ATA_Home/$IMAGENAMES.txt

echo This execution is for PatchSet $ps
while IFS= read -r line
do
  field=`echo $line | cut -d: -f1` # Could be: number or kind
  value=`echo $line | sed 's/.*: //'` # could be: REWORK, TRIVIAL_REBASE, MERGE_FIRST_PARENT_UPDATE, NO_CODE_CHANGE or NO_CHANGE
  if [ "$field" == "number" ]; then checkPS=$value;
  else
    echo  Patch set: $checkPS,  change kind: $value
    if [ "$checkPS" -gt "$ps" ]; then
      if [[ ! "$value" =~ "_CHANGE" ]]; then
        echo It is a newest patch-set... abort action
        echo -----------------------------------------
        ssh -p 29418 jenkins@gerrit gerrit review  --message "'Abort Automation-test $ServerType for PS $ps, the last PS is $checkPS - $BUILD_URL'" --tag "'Automation'" $change,$checkPS
        echo RunPhases=0 &gt;&gt; ${WORKSPACE}/properties.txt
        exit 0;
      else
        ps=$checkPS
        echo Current patchSet is $ps - no new code was changes.
      fi
    fi
  fi
done &lt;&lt;&lt; $(ssh -p 29418 jenkins@gerrit gerrit query --files --patch-sets $change | grep  'kind:\|number:' | tail -n +2)

ssh -p 29418 jenkins@gerrit gerrit review  --message "'Automation-test for $ServerType was started: $BUILD_URL'" --label Automation-Test=0 --tag "'Automation'" $change,$ps

echo RunPhases=1 &gt;&gt; ${WORKSPACE}/properties.txt
date

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>${WORKSPACE}/properties.txt</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
      <phaseName>Split session</phaseName>
      <phaseJobs>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>ipp_AT_run</jobName>
          <jobAlias/>
          <currParams>true</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath/>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>true</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition>${RunPhases} == 1</condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.36">
              <properties>REFSPEC=$REFSPEC
GERRIT_BRANCH=$GERRIT_BRANCH
CONFIGNAME=basic1of4
MODEL=$MODEL
SUITENAME=basic1of4
IMAGENAMES=$IMAGENAMES
PHASE=1
EMAIL=${EMAIL}
JOB_NAME_PARENT=${JOB_NAME}
BUILD_PARENT=${BUILD_NUMBER}
ServerType=${ServerType}</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.2">
              <name>PC2RUN</name>
              <nodeLabel>$NODE_NAME</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>ipp_AT_run</jobName>
          <jobAlias/>
          <currParams>true</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath/>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>true</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition>${RunPhases} == 1</condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.36">
              <properties>REFSPEC=$REFSPEC
GERRIT_BRANCH=$GERRIT_BRANCH
CONFIGNAME=basic2of4
MODEL=$MODEL
SUITENAME=basic2of4
IMAGENAMES=$IMAGENAMES
PHASE=2
EMAIL=${EMAIL}
JOB_NAME_PARENT=${JOB_NAME}
BUILD_PARENT=${BUILD_NUMBER}
ServerType=${ServerType}</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.2">
              <name>PC2RUN</name>
              <nodeLabel>$NODE_NAME</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>ipp_AT_run</jobName>
          <jobAlias/>
          <currParams>true</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath/>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>true</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition>${RunPhases} == 1</condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.36">
              <properties>REFSPEC=$REFSPEC
GERRIT_BRANCH=$GERRIT_BRANCH
CONFIGNAME=basic3of4
MODEL=$MODEL
SUITENAME=basic3of4
IMAGENAMES=$IMAGENAMES
PHASE=3
EMAIL=${EMAIL}
JOB_NAME_PARENT=${JOB_NAME}
BUILD_PARENT=${BUILD_NUMBER}
ServerType=${ServerType}</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.2">
              <name>PC2RUN</name>
              <nodeLabel>$NODE_NAME</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
        <com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
          <jobName>ipp_AT_run</jobName>
          <jobAlias/>
          <currParams>true</currParams>
          <aggregatedTestResults>false</aggregatedTestResults>
          <exposedSCM>false</exposedSCM>
          <disableJob>false</disableJob>
          <parsingRulesPath/>
          <maxRetries>0</maxRetries>
          <enableRetryStrategy>false</enableRetryStrategy>
          <enableCondition>true</enableCondition>
          <abortAllJob>false</abortAllJob>
          <condition>${RunPhases} == 1</condition>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters plugin="parameterized-trigger@2.36">
              <properties>REFSPEC=$REFSPEC
GERRIT_BRANCH=$GERRIT_BRANCH
CONFIGNAME=basic4of4
MODEL=$MODEL
SUITENAME=basic4of4
IMAGENAMES=$IMAGENAMES
PHASE=4
EMAIL=${EMAIL}
JOB_NAME_PARENT=${JOB_NAME}
BUILD_PARENT=${BUILD_NUMBER}
ServerType=${ServerType}</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.2">
              <name>PC2RUN</name>
              <nodeLabel>$NODE_NAME</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <killPhaseOnJobResultCondition>NEVER</killPhaseOnJobResultCondition>
          <buildOnlyIfSCMChanges>false</buildOnlyIfSCMChanges>
          <applyConditionOnlyIfNoSCMChanges>false</applyConditionOnlyIfNoSCMChanges>
        </com.tikal.jenkins.plugins.multijob.PhaseJobsConfig>
      </phaseJobs>
      <continuationCondition>SUCCESSFUL</continuationCondition>
      <executionType>PARALLEL</executionType>
      <quietPeriodGroovy>index &lt; 5 ? 0 : 2 * 60</quietPeriodGroovy>
    </com.tikal.jenkins.plugins.multijob.MultiJobBuilder>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.AlwaysRun" plugin="run-condition@1.3"/>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.9.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                      <string>NOT_BUILT</string>
                      <string>ABORTED</string>
                      <string>FAILURE</string>
                      <string>UNSTABLE</string>
                    </results>
                    <role>BOTH</role>
                    <executeOn>BOTH</executeOn>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>#!c:\cygwin\bin\bash  --login

echo Start check the change
date
if [ "$REFSPEC" == "" ]; then exit; fi

change=`echo $REFSPEC | cut -d/ -f4`
ps=`echo $REFSPEC | cut -d/ -f5`
NewPSwasNotChanged=1

echo Check if the change was submitted already
merged=no
if ssh -p 29418 jenkins@gerrit gerrit query --current-patch-set $change | grep -q "status: MERGED"; then
  echo Change was already merged, do not give grade
  merged=yes
else
  #Check if they are not a new PS - if yes, check if the code was changed
  #In case the code was not changed, give the score to the last PS - should be store in the checkPS variable. 
  checkPS=$ps
  while IFS= read -r line
  do
    field=`echo $line | cut -d: -f1` # Could be: number or kind
    value=`echo $line | sed 's/.*: //'` # could be: REWORK, TRIVIAL_REBASE, MERGE_FIRST_PARENT_UPDATE, NO_CODE_CHANGE or NO_CHANGE
    if [ "$field" == "number" ]; then checkPS=$value; echo Check Patch set $value;
    else if [[ "$checkPS" -gt "$ps" &amp;&amp; ! "$value" =~ "_CHANGE" ]]; then
      NewPSwasNotChanged=0
    fi; fi
  done &lt;&lt;&lt; $(ssh -p 29418 jenkins@gerrit gerrit query --patch-sets $change | grep  'kind:\|number:' | tail -n +2)

  if [[ "$NewPSwasNotChanged" -eq 1 ]]; then ps=$checkPS; fi
fi
echo merged=$merged &gt;&gt; ${WORKSPACE}/properties.txt
echo NewPSwasNotChanged=$NewPSwasNotChanged &gt;&gt; ${WORKSPACE}/properties.txt
echo newPS=$ps &gt;&gt; ${WORKSPACE}/properties.txt
echo Finish check the change
date</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.9.1">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                      <string>NOT_BUILT</string>
                      <string>ABORTED</string>
                      <string>FAILURE</string>
                      <string>UNSTABLE</string>
                    </results>
                    <role>BOTH</role>
                    <executeOn>BOTH</executeOn>
                    <buildSteps>
                      <EnvInjectBuilder plugin="envinject@2.3.0">
                        <info>
                          <propertiesFilePath>${WORKSPACE}/properties.txt</propertiesFilePath>
                        </info>
                      </EnvInjectBuilder>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>ABORTED</string>
                      <string>FAILURE</string>
                    </results>
                    <role>BOTH</role>
                    <executeOn>BOTH</executeOn>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>#!c:\cygwin\bin\bash  --login

echo Start give score
labelName="Automation-Test"
labelGrade="--label $labelName=-1"

date
if [ "$REFSPEC" == "" ]; then exit 1; fi
if [ "$NAGINATOR_COUNT" != 1 ]; then
  echo Skip vote, give another chance
  labelName="Automation-Test (Skip vote, give another chance)"
  labelGrade=""
fi

change=`echo $REFSPEC | cut -d/ -f4`
# ps=`echo $REFSPEC | cut -d/ -f5`

# No score if this patch-set was merged already
if [ "$merged" == "yes" ]; then labelGrade=""; fi

cp -f $ATA_Home/$IMAGENAMES.txt $WORKSPACE/childsBuilds.txt
ATRun=`cat $ATA_Home/$IMAGENAMES.txt`
rm -f $ATA_Home/$IMAGENAMES.txt

gerrit=$(ping jenkins -n 1 | grep "Reply from" | sed 's!^.*from !!; s!:.*!!')

echo Send failed message to Gerrit - $change,$newPS, $labelGrade
ssh -p 29418 jenkins@gerrit gerrit review \
--message "'$labelName $ServerType failed: $BUILD_URL ------ $ATRun'" \
--notify OWNER $labelGrade \
--tag "'Automation'" \
$change,$newPS

echo Finish give score

if ! echo $gerrit | grep -q .; then
  echo gerrit does not work, execute manually the following:
  echo ssh -p 29418 jenkins@gerrit gerrit review \
--message "'$labelName $ServerType failed: $BUILD_URL ($percent%)------ $ATRun'" \
--notify OWNER $labelGrade \
--tag "'Automation'" \
$change,$newPS
  exit 2
fi

date</command>
                        <unstableReturn>2</unstableReturn>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                    </results>
                    <role>BOTH</role>
                    <executeOn>BOTH</executeOn>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>#!c:\cygwin\bin\bash --login

echo Start give message
date
if [ "$REFSPEC" == "" ]; then exit 0; fi
if [ "${RunPhases}" -ne 1 ]; then exit 0; fi
if [ "${NewPSwasNotChanged}" -ne 1 ]; then 
  echo A new REWORK PS was detected, do not give any message to Gerrit
  exit 0; 
fi

change=`echo $REFSPEC | cut -d/ -f4`
# ps=`echo $REFSPEC | cut -d/ -f5`
labelName="Automation-Test"
percent=100

ATRun=`cat $ATA_Home/$IMAGENAMES.txt`
rm -f $ATA_Home/$IMAGENAMES.txt

echo ssh -p 29418 jenkins@gerrit gerrit query --current-patch-set $change

ssh -p 29418 jenkins@gerrit gerrit query --current-patch-set $change  &gt; allChange.txt
echo print Gerrit respons:
cat allChange.txt
echo ------------------

if ! grep -q change allChange.txt; then
  cat allChange.txt
  rm -f allChange.txt
  echo Failed, current-patch-set was not found ...
  echo gerrit does not work, execute manually the following:
  echo ssh -p 29418 jenkins@gerrit gerrit review \
--message "\"'$labelName $ServerType OK: $BUILD_URL (50%)------ $ATRun'\"" \
--notify OWNER ??--label $labelName=1 \
--tag "\"'Automation'\"" \
$change,$newPS
  exit 2
else
  score=$(grep -A2 'type: Automation-Test' allChange.txt | grep value | cut -d: -f2)
  echo Score: $score
fi

rm -f allChange.txt
if [ -z "$score" ]; then score=0; fi

echo curl -ks -u $GerritUserPass -X "GET https://gerrit/a/changes/?q=$change&amp;o=LABELS"
curl -ks -u $GerritUserPass -X GET "https://gerrit/a/changes/?q=$change&amp;o=LABELS" | grep -A5 Automation-Test

if curl -ks -u $GerritUserPass -X GET "https://gerrit/a/changes/?q=$change&amp;o=LABELS" | \
   grep -A1 Automation-Test | grep -q rejected; then
   echo Score is -1
   score=-1
fi

if [ $score  == -1 ]; then
  labelGrade=""
else
  labelGrade="--label $labelName=1"

  jenkins=$(ping jenkins -n 1 | grep "Reply from" | sed 's!^.*from !!; s!:.*!!')
  if ! echo $jenkins | grep -q .; then echo jenkins does not work; fi
  
  echo Check the queue...
  # Check if ipp_AT_parent job is in the queue or already running
  # to not give scrore till is finishing 
  for job in \
    $(curl -ks https://$jenkins/queue/api/json | \
    sed -e 's/REFSPEC/\n/g' | grep ipp_AT_parent); do
    if echo $job | grep -q $REFSPEC; then
      echo "ipp_AT_parent for $REFSPEC is in the queue, do not give score"
      labelGrade=""
      percent=50
    fi
  done
  
  echo Check running jobs
  # sbc-drt-request is running Already?
  allRunning=$(curl -ks "https://$jenkins/computer/api/json?tree=computer\[executors\[currentExecutable\[url\]\],\
oneOffExecutors\[currentExecutable\[url\]\]\]" | \
sed -e 's/"url":"/\n/g' | sed 's/"}}.*//g' | tail -n +2 | grep ipp_AT_run)
  
  for job in $(echo $allRunning | sed 's: :\n:g'); do
    job=$(echo $job | sed "s|jenkins|$jenkins|")
    if curl -ks "${job}api/json?tree=actions\[parameters\[value\]\]" | grep -q $REFSPEC; then
      echo "ipp_AT_run for $REFSPEC is still running, do not give score"
      labelGrade=""
      percent=50
    fi
  done
fi

if [ "$merged" == "yes" ]; then labelGrade=""; fi

echo Send OK message to Gerrit - $change,$newPS,  $labelGrade
ssh -p 29418 jenkins@gerrit gerrit review \
--message "'$labelName $ServerType OK: $BUILD_URL ($percent%)------ $ATRun'" \
--notify OWNER $labelGrade \
--tag "'Automation'" \
$change,$newPS
echo Finish give message

date</command>
                        <unstableReturn>2</unstableReturn>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>NOT_BUILT</string>
                    </results>
                    <role>BOTH</role>
                    <executeOn>BOTH</executeOn>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>#!c:\cygwin\bin\bash --login

if [ "$REFSPEC" == "" ]; then exit 0; fi
if [ "${RunPhases}" -ne 1 ]; then exit 0; fi

change=`echo $REFSPEC | cut -d/ -f4`

echo Send abort message to Gerrit - $change,$newPS
ssh -p 29418 jenkins@gerrit gerrit review \
--message "'Automation-Test $ServerType was aborted: $BUILD_URL'" \
--notify OWNER \
--tag "'Automation'" \
$change,$newPS
</command>
                        <unstableReturn>2</unstableReturn>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
            <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
              <recipientList>$DEFAULT_RECIPIENTS</recipientList>
              <configuredTriggers>
                <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
                  <email>
                    <recipientList>Oren.Assoulin IPPhoneAutomation yossim</recipientList>
                    <subject>$PROJECT_DEFAULT_SUBJECT</subject>
                    <body>$PROJECT_DEFAULT_CONTENT</body>
                    <recipientProviders>
                      <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
                    </recipientProviders>
                    <attachmentsPattern>childsBuilds.txt</attachmentsPattern>
                    <attachBuildLog>true</attachBuildLog>
                    <compressBuildLog>false</compressBuildLog>
                    <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
                    <contentType>both</contentType>
                  </email>
                </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
              </configuredTriggers>
              <contentType>default</contentType>
              <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
              <defaultContent>$DEFAULT_CONTENT</defaultContent>
              <attachmentsPattern/>
              <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
              <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
              <attachBuildLog>false</attachBuildLog>
              <compressBuildLog>false</compressBuildLog>
              <replyTo>$DEFAULT_REPLYTO</replyTo>
              <from/>
              <saveOutput>false</saveOutput>
              <disabled>false</disabled>
            </hudson.plugins.emailext.ExtendedEmailPublisher>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>.*(ClosedChannel|no workspace from node|Workspace is not accessible|OrderlyShutdown).*</regexpForRerun>
      <rerunIfUnstable>true</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>false</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>120</delay>
      </delay>
      <maxSchedule>1</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
  </publishers>
  <buildWrappers>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>GerritUserPass</name>
          <value>{AQAAABAAAAAgE2t2ZdKjh0eJo8d5UvQq6iKv93eH03zZrwJtJs9FtH+0DpRH/ojFHIjtNgFTi2Xx}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER} ${REFSPEC} ${ServerType} ${GERRIT_BRANCH}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <pollSubjobs>false</pollSubjobs>
</com.tikal.jenkins.plugins.multijob.MultiJobProject>