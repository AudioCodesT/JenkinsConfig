<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REFSPEC</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>ippTestAuto7</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!c:\cygwin\bin\bash --login
date
change=`echo $REFSPEC | cut -d/ -f4`
ps=`echo $REFSPEC | cut -d/ -f5`

while IFS= read -r line
do
  field=`echo $line | cut -d: -f1` # Could be: number or kind
  value=`echo $line | sed &apos;s/.*: //&apos;` # could be: REWORK, TRIVIAL_REBASE, MERGE_FIRST_PARENT_UPDATE, NO_CODE_CHANGE or NO_CHANGE
  if [ &quot;$field&quot; == &quot;number&quot; ]; then checkPS=$value;
  else
    echo  Patch set: $checkPS,  change kind: $value
    if [[ &quot;$checkPS&quot; -gt &quot;$ps&quot; &amp;&amp; &quot;$value&quot; == &quot;REWORK&quot; ]]; then
      echo It is a newest patch-set... abort action
      echo -----------------------------------------
      ssh -p 29418 jenkins@gerrit gerrit review  --message &quot;&apos;Abort Copying files for Automation test - PS $ps, the last PS is $checkPS - $BUILD_URL&apos;&quot; --tag &quot;&apos;Automation&apos;&quot; $change,$ps
      exit 1;
    fi
  fi
done &lt;&lt;&lt; $(ssh -p 29418 jenkins@gerrit gerrit query --files --patch-sets $change | grep  &apos;kind:\|number:&apos; | tail -n +2)

echo current patchSet is $checkPS - no new code changes, this execution is for PatchSet $ps
ssh -p 29418 jenkins@gerrit gerrit review  --message &quot;&apos;Copying files for Automation test was started: $BUILD_URL&apos;&quot; --tag &quot;&apos;Automation&apos;&quot; $change,$ps

net use z: /delete
net use z: &quot;\\\\10.59.0.87\\Firmwares&quot;

REFTARGET=`echo $REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;`
ARTIFACTORY=https://artifactory/api/storage/ipp-review/SFB/$GERRIT_BRANCH
DOWNLOAD=$(echo $ARTIFACTORY | sed &apos;s|api/storage/||&apos;)

#net use z: /DELETE
#net use z: &apos;\\10.59.0.87\Firmwares&apos;

if [ &quot;$GERRIT_BRANCH&quot; =  &quot;3.0.1&quot; ]; then ImagesList=(&quot;440HD&quot; &quot;430HD&quot; &quot;420HD&quot; &quot;405HD&quot;)
else ImagesList=(&quot;450HD&quot; &quot;445HD&quot; &quot;440HD&quot; &quot;430HD&quot; &quot;405HD&quot;)
fi

echo Check $REFTARGET
if ! curl -ks -X GET $ARTIFACTORY | grep -q $REFTARGET; then echo $REFTARGET does not exist, exit with error; exit 1; fi

echo Start copying files
COUNTER=0
countImages=${#ImagesList[@]}
while [  $countImages -gt 0 ]; do
  countImages=${#ImagesList[@]}
  for Image in $(curl -ks -X GET $ARTIFACTORY/$REFTARGET | grep -v _logs_ | grep &apos;.sim.tgz\|.img&apos; | cut -d&apos;&quot;&apos; -f4); do
    PRD=$(echo $Image | sed &apos;s:.UC::; s:_.*::&apos;);
    if [[ &quot;${ImagesList[@]}&quot; =~ &quot;$PRD&quot; ]]; then
      #TargetImage=$(echo $Image | sed &quot;s:\.\(img\|sim.tgz\)$:_${REFTARGET}.\1:&quot;)
      TargetImage=$Image
      #echo -- Check if $TargetImage exist in z:
      if [ ! -f z:$TargetImage ]; then
        echo ----      Download $TargetImage to z:
        curl -ks -X GET ${DOWNLOAD}/${REFTARGET}$Image --output z:$TargetImage
      else 
        echo ----      z:$TargetImage already exist.. skip the download...
      fi
      if echo $TargetImage | grep -q img; then ((countImages--)); fi
    fi
  done
  if [ $countImages -ne 0 ]; then sleep 30; fi  
  ((COUNTER++))
  echo Count $COUNTER
  if [ $COUNTER -eq 5 ]; then countImages=0; fi
done

#ImageNames=$(echo $Image | sed &apos;s:.*_::; s:.sim.tgz::; s:.img::&apos;)_${REFTARGET};
ImageNames=$(echo $Image | sed &apos;s:.*HD_::; s:.sim.tgz::; s:.img::&apos;)
echo ImageNames=${ImageNames} &gt; ${WORKSPACE}/properties.txt
date
if [ $COUNTER -eq 5 ]; then
  echo files were not found ... abort
  exit 1
fi
date

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.92.1">
      <info>
        <propertiesFilePath>properties.txt</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
            <worstResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </worstResult>
            <bestResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
              <buildSteps>
                <hudson.tasks.Shell>
                  <command>#!c:\cygwin\bin\bash  --login

change=`echo $REFSPEC | cut -d/ -f4`
ps=`echo $REFSPEC | cut -d/ -f5`

ssh -p 29418 jenkins@gerrit gerrit review \
--message &quot;&apos;images/files does not exist: $BUILD_URL&apos;&quot; \
--notify OWNER \
--tag &quot;&apos;Automation&apos;&quot; \
$change,$ps
</command>
                </hudson.tasks.Shell>
              </buildSteps>
              <scriptOnlyIfSuccess>false</scriptOnlyIfSuccess>
              <scriptOnlyIfFailure>true</scriptOnlyIfFailure>
              <markBuildUnstable>false</markBuildUnstable>
              <executeOn>BOTH</executeOn>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.30">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>REFSPEC=$REFSPEC
GERRIT_BRANCH=$GERRIT_BRANCH
MODEL=450
IMAGENAMES=$ImageNames
PHISICALPHONE=
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.1">
              <name>PC2RUN</name>
              <nodeLabel>ippTestAuto7</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <projects>ipp_AT_parent</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>REFSPEC=$REFSPEC
GERRIT_BRANCH=$GERRIT_BRANCH
MODEL=450
IMAGENAMES=$ImageNames
PHISICALPHONE=sim
</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.1">
              <name>PC2RUN</name>
              <nodeLabel>ippTestAuto8</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <projects>ipp_AT_parent</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.5.1">
      <template>#${BUILD_NUMBER} ${REFSPEC} $GERRIT_BRANCH</template>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>