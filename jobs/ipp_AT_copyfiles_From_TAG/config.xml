<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Execute the Automation Test for an existing TAG</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue>3.1.0</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name></name>
          <description></description>
          <allowedSlaves>
            <string>ipp-Auto7</string>
            <string>ipp-Auto8</string>
            <string>ippTestAuto9</string>
          </allowedSlaves>
          <defaultSlaves>
            <string>ipp-Auto7</string>
            <string>ipp-Auto8</string>
            <string>ippTestAuto9</string>
          </defaultSlaves>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>ippTestAuto</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!c:\cygwin\bin\bash --login
date

net use z: /delete
net use z: &quot;\\\\10.59.0.87\\Firmwares&quot;

ARTIFACTORY=https://artifactory/api/storage/ipp-release/com/ac/ipp/SFB/$GERRIT_BRANCH/$TAG
DOWNLOAD=$(echo $ARTIFACTORY | sed &apos;s|api/storage/||&apos;)


echo Looking after https://artifactory/api/storage/ipp-release/com/ac/ipp/SFB/$GERRIT_BRANCH/$TAG
ImagesList=(&quot;450HD&quot; &quot;445HD&quot; &quot;440HD&quot; &quot;430HD&quot; &quot;405HD&quot;)

echo Check $TAG
if ! curl -ks -X GET $ARTIFACTORY | grep -q $TAG; then echo $TAG does not exist, exit with error; exit 1; fi

echo Start copying files
COUNTER=0
countImages=${#ImagesList[@]}
while [  $countImages -gt 0 ]; do
  countImages=${#ImagesList[@]}
  for PRD in ${ImagesList[@]}; do 
    for Image in $(curl -ks -X GET $ARTIFACTORY/$PRD | grep -v _logs_ | grep &apos;.sim.tgz&quot;\|.img&quot;&apos; | cut -d&apos;&quot;&apos; -f4); do
      TargetImage=$Image
      #echo -- Check if $TargetImage exist in z:
      if [ ! -f z:$TargetImage ]; then
        echo ----      Download $TargetImage to z:
        curl -ks -X GET ${DOWNLOAD}/${PRD}$Image --output z:$TargetImage
      else 
        echo ----      z:$TargetImage already exist.. skip the download...
      fi
      if echo $TargetImage | grep -q img; then ((countImages--)); fi
    done
  done
  if [ $countImages -ne 0 ]; then sleep 30; fi  
  ((COUNTER++))
  echo Count $COUNTER
  if [ $COUNTER -eq 10 ]; then countImages=0; fi
done

#ImageNames=$(echo $Image | sed &apos;s:.*_::; s:.sim.tgz::; s:.img::&apos;)_${REFTARGET};
ImageNames=$(echo $Image | sed &apos;s:.*HD_::; s:.sim.tgz::; s:.img::&apos;)
echo ImageNames=${ImageNames} &gt; ${WORKSPACE}/properties.txt
date
if [ $COUNTER -eq 10 ]; then
  echo files were not found ... abort
  exit 2
fi
date

</command>
      <unstableReturn>2</unstableReturn>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>properties.txt</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>REFSPEC=
GERRIT_BRANCH=$GERRIT_BRANCH
MODEL=450
IMAGENAMES=$ImageNames
</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
            <org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter plugin="nodelabelparameter@1.7.2">
              <name>PC2RUN</name>
              <nodeLabel>$NODE_NAME</nodeLabel>
            </org.jvnet.jenkins.plugins.nodelabelparameter.parameterizedtrigger.NodeLabelBuildParameter>
          </configs>
          <projects>ipp_AT_parent</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER} ${TAG} $GERRIT_BRANCH</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>