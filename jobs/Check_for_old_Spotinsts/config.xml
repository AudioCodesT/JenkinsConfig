<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>Sanjer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 7 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#msg=`python /home/centos/si.py`
#echo $msg
#echo &quot;report=$msg&quot; &gt; /home/centos/env_properties.txt

python &lt;&lt;-EOS

import boto3
from botocore.exceptions import ClientError
import datetime
import pytz
import pprint
import json
from dateutil.tz import tzutc

now = datetime.datetime.now(pytz.utc)
yesterday = now - datetime.timedelta(days=1)

header = &quot;&lt;html&gt;&lt;body&gt;&lt;h1&gt;AWS daily report&lt;/h1&gt;&quot;
footer = &quot;&lt;/body&gt;&lt;/html&gt;&quot;

###########################################################################################################################################

ec2 = boto3.client(&apos;ec2&apos;)
si_header = &quot;&lt;h2&gt;Spotinst leftovers report&lt;/h2&gt;&lt;ol&gt;&quot;
si_footer = &quot;&lt;/ol&gt;&quot;

message = &quot;&quot;

instances = ec2.describe_instances(Filters=[{&apos;Name&apos;:&apos;tag:Creator&apos;,&apos;Values&apos;:[&apos;Spotinst&apos;]},{&apos;Name&apos;:&apos;instance-state-name&apos;,&apos;Values&apos;:[&apos;running&apos;]}])
for r in instances[&apos;Reservations&apos;]:
    for instance in r[&apos;Instances&apos;]:
        #pprint.pprint(instance)
        instance_id = instance[&apos;InstanceId&apos;]
        for t in instance[&apos;Tags&apos;]:
            if t[&apos;Key&apos;] == &quot;Name&quot;:
                instance_name = t[&apos;Value&apos;]
        launch_time = instance[&apos;LaunchTime&apos;]
        launch_time = launch_time.replace(tzinfo=pytz.utc)
        launch_date_str = launch_time.strftime(&apos;%d/%m/%Y&apos;)
        launch_hour_str = launch_time.strftime(&apos;%H:%M&apos;)

        if (yesterday - launch_time).days &gt; 1:
            #print(&quot;Instance ID: &quot; + instance_id + &quot; Instance Name: \&quot;&quot; + instance_name+ &quot;\&quot;, Launch Time: &quot; + launch_date_str + &quot; at: &quot; + launch_hour_str)
            message = (message + &quot;&lt;li&gt;Instance ID: &quot; + instance_id + &quot; Instance Name: \&quot;&quot; + instance_name + &quot;\&quot;, Launch Time: &quot; + launch_date_str + &quot; at: &quot; + launch_hour_str + &quot;&lt;/li&gt;&quot;)

print(message)

if message == &quot;&quot;:
    message = &quot;&lt;h3&gt;No Spotinst instances older then 1 day.&lt;/h3&gt;&quot;

si_message = (si_header + message + si_footer)

###########################################################################################################################################

ec2 = boto3.resource(&apos;ec2&apos;, region_name=&apos;eu-central-1&apos;)

vols_header = &quot;&lt;h2&gt;Volumes in status \&quot;Available\&quot;&lt;/h2&gt;&lt;ol&gt;&quot;
vols_footer = &quot;&lt;/ol&gt;&quot;

message = &quot;&quot;

volumes = ec2.volumes.filter(Filters=[{&apos;Name&apos;: &apos;status&apos;, &apos;Values&apos;: [&apos;available&apos;]}])

for v in volumes:
    v_id = str(v.id)
    v_size = str(v.size)
    message = (message + &quot;&lt;li&gt;Volume: &quot; + v_id + &quot; &quot; + v_size + &quot;GB&quot; + &quot;&lt;/li&gt;&quot;)

print(message)

if message == &quot;&quot;:
    message = &quot;&lt;h3&gt;No volumes in status \&quot;Available\&quot;&lt;/h3&gt;&quot;

vols_message = (vols_header + message + vols_footer)

###########################################################################################################################################

env_var = &apos;report=&apos; + header + si_message + vols_message + footer

print repr(env_var)

f1=open(&apos;/home/centos/env_properties.txt&apos;, &apos;w+&apos;)
f1.write(env_var)
f1.close()


EOS</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@1.92.1">
      <info>
        <propertiesFilePath>/home/centos/env_properties.txt</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.41.3">
      <recipientList>shuky.riechard@audiocodes.com,yuval.yosha@audiocodes.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
      <defaultSubject>AWS daily report</defaultSubject>
      <defaultContent>$report</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers/>
</project>