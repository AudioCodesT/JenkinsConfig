<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>if new code then build and deploy ovoc-7.4.0.zip&#xd;
if new code then build and deploy ovoc-7.4.2000.zip&#xd;
if new code then build and deploy ovoc-7.4.3000.zip&#xd;
if new code then build and deploy ovoc-7.6.zip</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_PATCHSET_REVISION</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit:29418/web-ui/ovoc</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$GERRIT_BRANCH</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <browser class="hudson.plugins.git.browser.GitBlitRepositoryBrowser">
      <url>https://gerrit/plugins/gitblit/</url>
      <projectName>web-ui/ovoc</projectName>
    </browser>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.BuildChooserSetting>
        <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser" plugin="gerrit-trigger@2.27.5">
          <separator>#</separator>
        </buildChooser>
      </hudson.plugins.git.extensions.impl.BuildChooserSetting>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>false</shallow>
        <noTags>false</noTags>
        <reference></reference>
        <timeout>20</timeout>
        <depth>0</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
    </extensions>
  </scm>
  <assignedNode>Web-UI-Win-Dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.27.5">
      <spec></spec>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>web-ui/ovoc</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>REG_EXP</compareType>
              <pattern>^((7.8.1000_ng2|7.8.1000_ng7).+|(?!(7.8.1000_ng2|7.8.1000_ng7)).*)$</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel></notificationLevel>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames></dependencyJobsNames>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>PLAIN</commentTextParameterMode>
      <buildStartMessage></buildStartMessage>
      <buildFailureMessage></buildFailureMessage>
      <buildSuccessfulMessage></buildSuccessfulMessage>
      <buildUnstableMessage></buildUnstableMessage>
      <buildNotBuiltMessage></buildNotBuiltMessage>
      <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
      <customUrl></customUrl>
      <serverName>gerritHost</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginChangeMergedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL></triggerConfigURL>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!c:\cygwin64\bin\bash --login -i
set -e
cd $WORKSPACE


if [[ &quot;$GERRIT_BRANCH&quot; != &quot;7.4&quot;* ]] &amp;&amp; [[ &quot;$GERRIT_BRANCH&quot; != &quot;7.6&quot; ]]
then
# adding ac-infra
echo &quot;git submodule init&quot;
git submodule init
echo &quot;git submodule update&quot;
git submodule update
echo &quot;finish submodule&quot;
#rm -rf yarn.lock
fi


#connect repositories using https instead opf git:
git config url.https://.insteadOf git://

# we build only if jenkins checked out on the last commit in branch, else exit 0
LastGerritCommitHash=$( git ls-remote  | grep refs/heads/$GERRIT_BRANCH  | cut -f 1 | head -n 1 )
echo $LastGerritCommitHash
echo $GERRIT_PATCHSET_REVISION
if [ &quot;$LastGerritCommitHash&quot; == &quot;$GERRIT_PATCHSET_REVISION&quot; ]
then
	if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.4&quot;* ]] || [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.6&quot;* ]]
	then
		output=$( netstat -ano | grep -wF 5678 ) || true
		echo &quot;private-bower check =&quot; $output
		if [[ -z &quot;$output&quot; ]]
		then private-bower &amp; sleep 15
		fi
	fi
      
      # for version 7.4.2000 and down, use nmp/bower
      if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.4&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.1000&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.2000&quot; ]]
      then 
      	echo &quot;RUN:npm install&quot;
      	npm install
      	echo &quot;RUN: bower install --force-latest&quot;
	  	bower install --force-latest
      # for version 7.4.3000 and up, use yarn
      else
        
      	yarn config set registry https://artifactory/api/npm/npm/
		yarn config set strict-ssl false
      	echo &quot;RUN: yarn install&quot;
      	yarn install
      fi
      
      #update version number before grunt dist
      #change the hard-coded &quot;7.4.0&quot; to branch name + jenkins build number
      # for example:  7.4.3000.235
      current_branch=`git branch --no-color -r --contains HEAD | grep -v -e &apos;-&gt;&apos; | head -1 | awk -F&apos;/&apos; &apos;{print $NF}&apos;`
      perl -pi -e &quot;s/7.4.0/${current_branch}.${BUILD_NUMBER}/g&quot; build.config.js
      
      if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.4&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.1000&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.2000&quot; ]]
      then
      echo &quot;RUN: grunt dist&quot;
      grunt dist
      else
              # set the build number as a version, and run dist
              if [ -f webpack.config.js ]; then
                  echo &quot;*** adding Jenkins BUILD_NUMBER as a version in file webpack.config.js ***&quot;
                  perl -pi -e &quot;s/\&quot;%version%\&quot;/\&quot;${BUILD_NUMBER}\&quot;/g&quot; webpack.config.js
              fi
            echo &quot;RUN: yarn run distTest&quot;
            yarn run distTest
            
             #kill the Proxy Server process
            pidNumber=$(netstat -ano | grep 9000 | awk &apos;{print $5}&apos; | head -n 1  | sed -e &quot;s/[[:space:]]\+/ /g&quot;)
            echo &quot;pidNumber = $pidNumber&quot;
            if [[ ! -z &quot;$pidNumber&quot; ]]
            then
              echo &quot;killing the proccess of the protractor proxy server&quot;
              taskkill /F /PID &quot;$pidNumber&quot;
            fi
            if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.4.3000&quot; ]]
            then
              echo &quot;for 7.4.3000 NO Protractor or UITests running&quot;
              #for branch 7.6 run protractor TESTS
            elif [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.6&quot; ]]
            then
                  echo &quot;RUN: yarn run protractorProxyServer&quot;
                  yarn run protractorProxyServer &amp; sleep 15
                  echo &quot;RUN: yarn run protractorServer&quot;
                  yarn run protractorServer &amp; sleep 15
                  echo &quot;RUN: yarn run protractor&quot;
                  yarn run protractor
                  #all others branches (7.6.1000 and up) run uiTests
            else
                  if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.6.1000&quot; ]]
                  then
                        #change serverName to proxy server ip
                        #sed -i -- &apos;s/%serverName%/172.17.118.91/g&apos; ${WORKSPACE}/proxyServer.js
                        echo &quot;no commits in 7.6.1000&quot;
                  elif [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.6.2000&quot; ]]
                  then
                        sed -i -- &apos;s/%serverName%/172.17.118.92/g&apos; ${WORKSPACE}/proxyServer.js
                  else
                        sed -i -- &apos;s/%serverName%/172.17.118.95/g&apos; ${WORKSPACE}/proxyServer.js
                  fi
                        #change username and password
                        sed -i -- &apos;s/%username%/acladmin/g&apos; ${WORKSPACE}/cypress/support/config.ts
                        sed -i -- &apos;s/%password%/pass_1234/g&apos; ${WORKSPACE}/cypress/support/config.ts
                        sed -i -- &quot;s/%version%/${BUILD_NUMBER}/g&quot; ${WORKSPACE}/cypress/support/config.ts
                        cat ${WORKSPACE}/cypress/support/config.ts
                        cat ${WORKSPACE}/proxyServer.js
                   if [[ $GERRIT_BRANCH != &quot;7.8.2000&quot; ]]
                   then
                        echo &quot;RUN: yarn run proxyServer&quot;
                        yarn run proxyServer &amp; sleep 15
                        echo &quot;RUN: yarn test:jenkins&quot;
                        yarn test:jenkins
                   fi
            fi
            echo &quot;RUN: yarn run distFull&quot;
            yarn run distFull
            if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.8.2000&quot; ]]
            then
            	perl -pi -e &quot;s/\&quot;%version%\&quot;/\&quot;${BUILD_NUMBER}\&quot;/g&quot; index.html
                cat index.html
            fi
            echo &quot;RUN:yarn run zip&quot;
            yarn run zip  
     fi
      
     
#rename zip file to ovoc-7.4.0.zip in order to deploy in one name to artifactory
if [[ &quot;$GERRIT_BRANCH&quot; == &quot;7.4&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.1000&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.2000&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;7.4.3000&quot; ]]
then mv dist/ovoc*.zip dist/ovoc-7.4.0.zip
# from 7.6 we use a new name:
else mv dist/ovoc*.zip dist/ovoc-ui.zip
fi
else
	echo &quot;******   This is not the last commit. Exit without building  ******&quot;
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>cypress\videos\ovoc\**\*.mp4</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.6.0">
      <config>
        <scriptFiles/>
        <groovyScripts/>
        <buildSteps>
          <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
            <results>
              <string>FAILURE</string>
            </results>
            <role>BOTH</role>
            <buildSteps>
              <hudson.tasks.Shell>
                <command>#!C:\Program Files\Git\bin\bash --login -i
set -x
message=&quot;Build after submit failed: ${BUILD_URL}artifact/cypress/videos/ovoc/&quot;
CURL=&quot;curl -kn -u jenkins:$jpass --silent&quot;
base=https://$GERRIT_HOST/a/changes
id=${GERRIT_PROJECT}~${GERRIT_BRANCH}~${GERRIT_CHANGE_ID}
idEscaped=${id////%2F}
endpoint=&quot;/$idEscaped/revisions/$GERRIT_PATCHSET_REVISION/review&quot;
pathToVideos=&quot;cypress/videos/ovoc&quot;
checkIfMP4Exists=$(find &quot;$pathToVideos&quot; -name *.mp4)

if [[ &quot;$checkIfMP4Exists&quot; != &quot;&quot; ]]
then
$CURL -X POST &quot;$base/$endpoint&quot; --header &quot;Content-Type: application/json;charset=UTF-8&quot;  -d &quot;{\&quot;message\&quot;: \&quot;$message\&quot;}&quot;
fi</command>
              </hudson.tasks.Shell>
            </buildSteps>
          </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
          <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
            <results>
              <string>SUCCESS</string>
            </results>
            <role>BOTH</role>
            <buildSteps>
              <hudson.tasks.Shell>
                <command>#!C:\Program Files\Git\bin\bash --login -i
set -x
message=&quot;Build was successful in retry ${NAGINATOR_COUNT}&quot;
CURL=&quot;curl -kn -u jenkins:$jpass --silent&quot;
base=https://$GERRIT_HOST/a/changes
id=${GERRIT_PROJECT}~${GERRIT_BRANCH}~${GERRIT_CHANGE_ID}
idEscaped=${id////%2F}
endpoint=&quot;/$idEscaped/revisions/$GERRIT_PATCHSET_REVISION/review&quot;
pathToVideos=&quot;cypress/videos/ovoc&quot;
checkIfMP4Exists=$(find &quot;$pathToVideos&quot; -name *.mp4)
if [[ $NAGINATOR_COUNT -ge 0 ]]
then
	$CURL -X POST &quot;$base/$endpoint&quot; --header &quot;Content-Type: application/json;charset=UTF-8&quot;  -d &quot;{\&quot;message\&quot;: \&quot;$message\&quot;}&quot;
fi</command>
              </hudson.tasks.Shell>
            </buildSteps>
          </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
        </buildSteps>
        <markBuildUnstable>false</markBuildUnstable>
      </config>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>.*java.nio.channels.ClosedChannelException*.</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>false</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>5</delay>
      </delay>
      <maxSchedule>2</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.62">
      <recipientList>OVOCWebUI@audiocodes.com, cc:ben.magriso@audiocodes.com, cc:Shuky.Riechard</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.StillFailingTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.StillFailingTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>ALERT !!!  OVOC WEB-UI BUILD FAILED AFTER SUBMIT  !!!  ALERT</defaultSubject>
      <defaultContent>Review console output of this build:
$BUILD_URL
</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from></from>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.tasks.Mailer plugin="mailer@1.21">
      <recipients>ben.magriso Shuky.Riechard</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.34">
      <patterns>
        <hudson.plugins.ws__cleanup.Pattern>
          <pattern>.git/**</pattern>
          <type>EXCLUDE</type>
        </hudson.plugins.ws__cleanup.Pattern>
      </patterns>
      <deleteDirs>true</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>true</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.1.0">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/dist/ovoc*.zip&quot;,
            &quot;target&quot;: &quot;ems-release/com/ac/ems/ovoc_client/$GERRIT_BRANCH//&quot;,
            &quot;props&quot;: &quot;type=zip;status=ready&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern>dist/ovoc*.zip=&gt;com/ac/ems/ovoc_client/$GERRIT_BRANCH/</deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>false</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jpass</name>
          <value>{AQAAABAAAAAQJ1UnGzJN43bDFMYbT+6UB/oR5xOyviDw9lXlrJx1M+0=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER}_branch:$GERRIT_BRANCH</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>