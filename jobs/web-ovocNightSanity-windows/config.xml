<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>1. Trigger by poll SCM every night at 9 PM&#13;
2. Get the latest code from branch 7.6.2000&#13;
3. run full sanity tests, if failed send email to OVOC UI.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description/>
          <defaultValue>7.8.2000</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit:29418/web-ui/ovoc</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>refs/heads/7.8.2000</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
      <hudson.plugins.git.extensions.impl.LocalBranch>
        <localBranch>refs/heads/7.8.2000</localBranch>
      </hudson.plugins.git.extensions.impl.LocalBranch>
    </extensions>
  </scm>
  <assignedNode>Web-UI-Win-Dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H 21 * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!c:\cygwin64\bin\bash --login -i
##!C:\Program Files\Git\bin\bash --login -i

set -e
cd $WORKSPACE

id

chrome_version=$(cmd.exe /C 'wmic datafile where name="C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe" get Version /value')

echo "*********************************************************************************************************************"
echo "Google Chrome Version is: $chrome_version"
echo "*********************************************************************************************************************"

#until branch 7.8.1000 (include) use nvm 12.16.1 (npm 12.16.1 and yarn 1.5.1) from 7.8.2000 use nvm 12.16.2(npm 12.16.2 and yarn 1.22.4)
if [[ "$GERRIT_BRANCH" == "7.4"* || "$GERRIT_BRANCH" == "7.6"*  || "$GERRIT_BRANCH" == "7.8" || "$GERRIT_BRANCH" == "7.8.1000" ]]
then
	nvm use 12.16.1
else
	nvm use 12.16.2
fi
if [[ "$GERRIT_BRANCH" != "7.4"* ]] &amp;&amp; [[ "$GERRIT_BRANCH" != "7.6" ]]
then
# adding ac-infra
echo "git submodule init"
git submodule init
echo "git submodule update"
git submodule update
echo "finish submodule"
# delete yarn.lock file which failing the build (auto generated in yarn install)
#rm -rf yarn.lock
fi
#connect repositories using https instead opf git:
git config url.https://.insteadOf git://


# checking if the private-bower is running
if [[ "$GERRIT_BRANCH" == "7.4"* ]] || [[ "$GERRIT_BRANCH" == "7.6"* ]]
then
	output=$( netstat -ano | grep -wF 5678 ) || true
	echo "private-bower check =" $output
	if [[ -z "$output" ]]
	then private-bower &amp; sleep 15
	fi
fi

if [[ "$GERRIT_BRANCH" == "7.4" || "$GERRIT_BRANCH" == "7.4.1000" || "$GERRIT_BRANCH" == "7.4.2000" ]]
then 
  echo "RUN:npm install"
  npm install
  echo "RUN: bower install --force-latest"
  bower install --force-latest
   echo "RUN: grunt dist"
  grunt dist
else

	yarn config set registry https://artifactory/api/npm/npm/
	yarn config set strict-ssl false
    if [[ "$GERRIT_BRANCH" == "7.4"* || "$GERRIT_BRANCH" == "7.6"*  || "$GERRIT_BRANCH" == "7.8" || "$GERRIT_BRANCH" == "7.8.1000" ]]
	then 
 		echo "RUN: yarn install"
    	yarn install
    else
    	echo "RUN: yarn i"
        yarn i
   fi
   if [[ "$GERRIT_BRANCH" == "7.4"* || "$GERRIT_BRANCH" == "7.6"*  || "$GERRIT_BRANCH" == "7.8"|| "$GERRIT_BRANCH" == "7.8.1000" ]]
   then
    	echo "RUN: yarn run distTest"
    	yarn run distTest
    fi
   #kill the Proxy Server process
   pidNumber=$(netstat -ano | grep 9000 | awk '{print $5}' | head -n 1  | sed -e "s/[[:space:]]\+/ /g")
  echo "pidNumber = $pidNumber"
   if [[ ! -z "$pidNumber" ]]
   then
      echo "killing the proccess of the protractor proxy server"
	  taskkill /F /PID "$pidNumber"
   fi
   if [[ "$GERRIT_BRANCH" == "7.4.3000" ]]
   then
   		echo "for 7.4.3000 NO Protractor or UITests running"
   #for branch 7.6 run protractor TESTS
   elif [[ "$GERRIT_BRANCH" == "7.6" ]]
   then
   		echo "RUN: yarn run protractorProxyServer"
    	yarn run protractorProxyServer &amp; sleep 15
    	echo "RUN: yarn run protractorServer"
    	yarn run protractorServer &amp; sleep 15
    	echo "RUN: yarn run protractor"
    	yarn run protractor
        #all others branches run uiTests
	else
        if [[ "$GERRIT_BRANCH" == "7.6.1000" ]]
        then
        	#change serverName to proxy server ip
    		#sed -i -- 's/%serverName%/172.17.118.91/g' ${WORKSPACE}/proxyServer.js
            echo "no commits in 7.6.1000"
        elif [[ "$GERRIT_BRANCH" == "7.6.2000" ]]
        then
        	echo "172.17.118.92"
       		sed -i -- 's/%serverName%/172.17.118.92/g' ${WORKSPACE}/proxyServer.js
        else
        	#temporary
        	if [[ "$GERRIT_BRANCH" == "7.8" || "$GERRIT_BRANCH" == "7.8.1000" ]]
            then
            	echo "172.17.118.95"
        		sed -i -- 's/%serverName%/172.17.118.95/g' ${WORKSPACE}/proxyServer.js
            else
            	echo "172.17.118.93"
        		sed -i -- 's/%serverName%/172.17.118.93/g' ${WORKSPACE}/proxyServer.js            
            fi
        fi
        #change username and password
    	sed -i -- 's/%username%/acladmin/g' ${WORKSPACE}/cypress/support/config.ts
        sed -i -- 's/%password%/pass_1234/g' ${WORKSPACE}/cypress/support/config.ts 
     	sed -i -- "s/%version%/${BUILD_NUMBER}/g" ${WORKSPACE}/cypress/support/config.ts
        echo "cat ${WORKSPACE}/cypress/support/config.ts"
        cat ${WORKSPACE}/cypress/support/config.ts
        echo "RUN: yarn run proxyServer"
  	    yarn run proxyServer &amp; sleep 15
        if [[ "$GERRIT_BRANCH" != "7.4"* &amp;&amp; "$GERRIT_BRANCH" != "7.6"*  &amp;&amp; "$GERRIT_BRANCH" != "7.8" &amp;&amp; "$GERRIT_BRANCH" != "7.8.1000" ]]
        then
        	pidNumber=$(netstat -ano | grep 4200 | awk '{print $5}' | head -n 1  | sed -e "s/[[:space:]]\+/ /g")
            if [[ ! -z "$pidNumber" ]]
   			then
      			echo "killing the proccess of the ng server"
	  			taskkill /F /PID "$pidNumber"
   			fi
        	echo "RUN: yarn run jenkinsServe"
            yarn run jenkinsServe &amp; sleep 120
        fi
        echo "RUN: yarn test:jenkins"
        yarn test:jenkins
        echo "finish run yarn test:jenkins"
    fi
fi

echo "finish"


</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>cypress\videos\ovoc\**\*.mp4</artifacts>
      <allowEmptyArchive>true</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>.*(ClosedChannel|no workspace from node|Workspace is not accessible|node is offline|Error fetching remote|JNLP4-connect connection|Error cloning remote repo 'origin').*</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>5</delay>
      </delay>
      <maxSchedule>2</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
      <recipientList>OVOCWebUI@audiocodes.com, cc:ben.magriso@audiocodes.com, cc:Shuky.Riechard</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>ALERT !!!  OVOC WEB-UI NIGHTLY BUILD FAILD  !!!  ALERT</defaultSubject>
      <defaultContent>Review console output of this build:
$BUILD_URL
</defaultContent>
      <attachmentsPattern/>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>ben.magriso Shuky.Riechard</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}_branch:$GERRIT_BRANCH</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>