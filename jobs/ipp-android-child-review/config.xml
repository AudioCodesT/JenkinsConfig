<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>This job executed by ipp-android-parent-review.&#13;
Input:&#13;
 1. GERRIT_BRANCH - the branch name&#13;
 2. manifestsBranch - which manifest use, could be the branch name or a Gerrit ref name&#13;
 3. CHANGES - all commit changes list that should participate in this build&#13;
 4. change - the commit change that wake up this compilation</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>this is the branch of the manifest we are going to compile.
1 out of 3 main manifests or another triggered branch</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>manifestsBranch</name>
          <description>gerrit refsspec if one of the participant is a manifest commit.
else: branch name of the manifest we compile now
</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHANGES</name>
          <description>Revision list that needed for thic compilation</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>change</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>prop</propertiesFilePath>
        <scriptContent>#!/bin/bash
if [[ "$GERRIT_BRANCH" == "android-9"  || "$GERRIT_BRANCH" == "audc-px30" || "$GERRIT_BRANCH" == "audc-rk3399" ]];
then
CUSTOM_WORKSPACE="/home/ubuntu/jenkinsslave/workspace/ipp-android_android9"
else
CUSTOM_WORKSPACE="/home/ubuntu/jenkinsslave/workspace/ipp-android"
fi
echo "CUSTOM_WORKSPACE=${CUSTOM_WORKSPACE}" &gt; prop
</scriptContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>ipp-android-dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>${CUSTOM_WORKSPACE}</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
#the above line is needed because we are going to use "source" command

pwd
xmlFile="default.xml"
if [[ "$manifestsBranch" =~ "-m" ]]; then xmlFile=$(echo $manifestsBranch | cut -d" " -f 3); fi

#**************** clean workspace before starting repo init and repoy sync ***************
echo "cleaning ipp-android_android9 workspace"
cd ${WORKSPACE}/..
cd ipp-android_android9
repo forall -c 'git reset --hard;git clean -ffdx' -j$(nproc) || echo "not fail the build if clean fails"
rm -rf hardware out || echo "not fail the build if clean fails"
echo "cleaning ipp-android (branch master) workspace"
cd ${WORKSPACE}/..
cd ipp-android
repo forall -c 'git reset --hard;git clean -ffdx' -j$(nproc) || echo "not fail the build if clean fails"
rm -rf hardware out || echo "not fail the build if clean fails"
cd ${WORKSPACE}
#**************** clean workspace before starting repo init and repoy sync ***************

rm -f *.zip

repo init -u ssh://jenkins@gerrit:29418/IPP/Android/repo_manifests -b $manifestsBranch

for change in $CHANGES; do
   repo=$(echo $change | cut -d: -f1)
   revision=$(echo $change | cut -d: -f3)
   echo Find $repo in default.xml and replace to the change revision $revision
   sed -i.bak -e 's:\(.*'$repo'\".* revision=\"\)[^"]*\(\" .*\):\1'$revision'\2:' .repo/manifests/$xmlFile
   grep $repo .repo/manifests/$xmlFile
done

# second need to sync on latest changes off all other repositories
echo ----- repo sync -c --no-clone-bundle -j16$(nproc) --force-sync
repo sync -c --no-tags --no-clone-bundle -j$(nproc) --force-sync
if [ $? -ne 0 ]; then 
  echo Repo sync failed... exit with error
  exit 3
fi

./build/tools/make.sh --zip-images --clean
</command>
      <unstableReturn>3</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    "files": [
        {
            "pattern": "${WORKSPACE}/*.zip",
            "target": "ipp-review/Android/${GERRIT_BRANCH}/${BUILD_NUMBER}/",
            "props": "type=zip;status=ready",
             "recursive": "false"
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec/>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/*.zip=&gt;Android/${GERRIT_BRANCH}/${BUILD_NUMBER}</deployPattern>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER} $GERRIT_BRANCH $change</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>