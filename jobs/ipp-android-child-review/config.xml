<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job executed by ipp-android-parent-review.&#xd;
Input:&#xd;
 1. GERRIT_BRANCH - the branch name&#xd;
 2. manifestsBranch - which manifest use, could be the branch name or a Gerrit ref name&#xd;
 3. CHANGES - all commit changes list that should participate in this build&#xd;
 4. change - the commit change that wake up this compilation</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description>this is the branch of the manifest we are going to compile.
1 out of 3 main manifests or another triggered branch</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>manifestsBranch</name>
          <description>gerrit refsspec if one of the participant is a manifest commit.
else: branch name of the manifest we compile now
</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CHANGES</name>
          <description>Revision list that needed for thic compilation</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>change</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>prop</propertiesFilePath>
        <scriptContent>#!/bin/bash
if [[ &quot;$GERRIT_BRANCH&quot; == &quot;android-9&quot;  || &quot;$GERRIT_BRANCH&quot; == &quot;audc-px30&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;audc-rk3399&quot; ]];
then
CUSTOM_WORKSPACE=&quot;/home/ubuntu/jenkinsslave/workspace/ipp-android_android9&quot;
else
CUSTOM_WORKSPACE=&quot;/home/ubuntu/jenkinsslave/workspace/ipp-android&quot;
fi
echo &quot;CUSTOM_WORKSPACE=${CUSTOM_WORKSPACE}&quot; &gt; prop
</scriptContent>
        <secureGroovyScript plugin="script-security@1.54.2">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>ipp-android-dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <customWorkspace>${CUSTOM_WORKSPACE}</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -x
#the above line is needed because we are going to use &quot;source&quot; command

pwd
xmlFile=&quot;.repo/manifests/default.xml&quot;

#**************** clean workspace before starting repo init and repo sync ***************
echo Clean workspace
find . -name index.lock -print
find . -name index.lock -exec rm -f {} \;
repo forall -c &apos;git reset --hard; git clean -ffdx&apos;
find . -name index.lock -print
find . -name index.lock -exec rm -f {} \;
rm -rf hardware
cd .repo/manifests
git checkout -- default.xml
cd $WORKSPACE
#**************** clean workspace before starting repo init and repo sync ***************

rm -f *.zip

repo init -u ssh://jenkins@gerrit:29418/IPP/Android/repo_manifests -b $manifestsBranch

for change in $CHANGES; do
   repo=$(echo $change | cut -d: -f1)
   revision=$(echo $change | cut -d: -f3)
   echo Find $repo in default.xml and replace to the change revision $revision
   sed -i.bak -e &apos;s:\(.*&apos;$repo&apos;\&quot;.* revision=\&quot;\)[^&quot;]*\(\&quot; .*\):\1&apos;$revision&apos;\2:&apos; $xmlFile
   grep $repo $xmlFile
done

# second need to sync on latest changes off all other repositories
echo ----- repo sync -c --no-clone-bundle -j16 --force-sync
repo sync -c --no-tags --no-clone-bundle -j16 --force-sync
if [ $? -ne 0 ]; then 
  echo Repo sync failed... exit with error
  exit 3
fi

./build/tools/make.sh --zip-images --clean
</command>
      <unstableReturn>3</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.21">
      <recipients>yossim,ben.magriso</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.1.0">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;${WORKSPACE}/*.zip&quot;,
            &quot;target&quot;: &quot;ipp-review/Android/${GERRIT_BRANCH}/${BUILD_NUMBER}/&quot;,
            &quot;props&quot;: &quot;type=zip;status=ready&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/*.zip=&gt;Android/${GERRIT_BRANCH}/${BUILD_NUMBER}</deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER} $GERRIT_BRANCH $change</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>