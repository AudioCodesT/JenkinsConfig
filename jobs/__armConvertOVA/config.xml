<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>60</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>arm-convertOVA</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>clean_workspace()
{
	rm -rf artifacts &amp;&amp; mkdir artifacts
    rm -rf ${WORKSPACE}/*.mf ${WORKSPACE}/*.ovf ${WORKSPACE}/*.vmdk ${WORKSPACE}/*.ova
}


open_ova()
{
	tar -xvf ${WORKSPACE}/ARM-Conf_${TAG}.ova
    tar -xvf ${WORKSPACE}/ARM-Router_${TAG}.ova
    #rename s/VHD_// VHD_ARM*
}
build_raw()
{

	qemu-img convert -f vmdk ${WORKSPACE}/ARM-Conf_${TAG}-disk1.vmdk -O raw ${WORKSPACE}/ARM-Conf_${TAG}.img
    qemu-img convert -f vmdk ${WORKSPACE}/ARM-router_${TAG}-disk1.vmdk -O raw ${WORKSPACE}/ARM-Router_${TAG}.img
}
build_hyperv()
{
	qemu-img convert -f raw ${WORKSPACE}/ARM-Conf_${TAG}.img -O vhdx -o subformat=dynamic ${WORKSPACE}/artifacts/ARM-Conf_${TAG}.vhdx
    qemu-img convert -f raw ${WORKSPACE}/ARM-Router_${TAG}.img -O vhdx -o subformat=dynamic ${WORKSPACE}/artifacts/ARM-Router_${TAG}.vhdx
}
build_azure()
{
    # convert image to fixed VHD format aligned to 1 MB
    MB=$((1024*1024))
    CONF_SIZE=$(qemu-img info -f raw --output json ${WORKSPACE}/ARM-Conf_${TAG}.img | gawk 'match($0, /"virtual-size": ([0-9]+),/, val) {print val[1]}')
    ROUTER_SIZE=$(qemu-img info -f raw --output json ${WORKSPACE}/ARM-Router_${TAG}.img | gawk 'match($0, /"virtual-size": ([0-9]+),/, val) {print val[1]}')
    echo "Configurator Image Size = $CONF_SIZE"
    echo "Router Image Size = $ROUTER_SIZE"
    CONF_ROUNDED_SIZE=$((($CONF_SIZE/$MB + 1)*$MB))
    ROUTER_ROUNDED_SIZE=$((($ROUTER_SIZE/$MB + 1)*$MB))
    echo "Configurator Rounded Image Size = $CONF_ROUNDED_SIZE"
    echo "Router Rounded Image Size = $ROUTER_ROUNDED_SIZE"
 
    echo "Resize image"
    qemu-img resize ${WORKSPACE}/ARM-Conf_${TAG}.img $CONF_ROUNDED_SIZE
 	qemu-img resize ${WORKSPACE}/ARM-Router_${TAG}.img $ROUTER_ROUNDED_SIZE
 
    echo "Convert image to VHD"
    qemu-img convert -f raw -O vpc -o subformat=fixed ${WORKSPACE}/ARM-Conf_${TAG}.img ${WORKSPACE}/artifacts/ARM-Conf_${TAG}.vhd
	qemu-img convert -f raw -O vpc -o subformat=fixed ${WORKSPACE}/ARM-Router_${TAG}.img ${WORKSPACE}/artifacts/ARM-Router_${TAG}.vhd
}

open_ova
build_raw
clean_workspace
build_azure
#build_hyperv</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    "files": [
        {
            "pattern": "${WORKSPACE}/artifacts/ARM-Conf_${TAG}.vhd",
            "target": "libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Conf_${TAG}/",
             "recursive": "false"
        },
        {
            "pattern": "${WORKSPACE}/artifacts/ARM-Router_${TAG}.vhd",
            "target": "libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Router_${TAG}/",
             "recursive": "false"
        }   
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    "files": [
        {
            "pattern": "libs-release-local/com/ac/arm/OVA/${TAG}/ARM-Conf_${TAG}/ARM-Conf_${TAG}.ova",
            "target": "${workspace}/",
            "flat": "true"
        },
        {
            "pattern": "libs-release-local/com/ac/arm/OVA/${TAG}/ARM-Router_${TAG}/ARM-Router_${TAG}.ova",
            "target": "${workspace}/",
            "flat": "true"
        }
    ]
}</spec>
      </downloadSpec>
      <deployPattern/>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}__${TAG}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>