<?xml version='1.1' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.12">
  <actions/>
  <description>Activated by Automation Test&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>5</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>5</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REFSPEC</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <secureGroovyScript plugin="script-security@1.43">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.8.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>$REFSPEC</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/SFB</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>$REFSPEC</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>true</shallow>
        <noTags>false</noTags>
        <reference></reference>
        <timeout>10</timeout>
        <depth>100</depth>
        <honorRefspec>false</honorRefspec>
      </hudson.plugins.git.extensions.impl.CloneOption>
      <hudson.plugins.git.extensions.impl.BuildChooserSetting>
        <buildChooser class="com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser" plugin="gerrit-trigger@2.27.5">
          <separator>#</separator>
        </buildChooser>
      </hudson.plugins.git.extensions.impl.BuildChooserSetting>
    </extensions>
  </scm>
  <quietPeriod>60</quietPeriod>
  <scmCheckoutRetryCount>1</scmCheckoutRetryCount>
  <assignedNode>ipp-mc-fathers-centos7.4</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <org.jenkinsci.plugins.yamlaxis.YamlAxis plugin="yaml-axis@0.2.0">
      <name>MAKE_CMD</name>
      <values>
        <string>boards2review.yml</string>
      </values>
    </org.jenkinsci.plugins.yamlaxis.YamlAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>ipp-centos7.4</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>#Find from the yml line the AUTOPRD name
AUTOPRD=`echo $MAKE_CMD | sed s/.*AUTOPRD=// | cut -d&quot; &quot; -f1 | cut -d&quot;&amp;&quot; -f1`
echo AUTOPRD=${AUTOPRD} &gt; generated_ipp_version.properties
#In case the AUTOPRD name contain __IIM or something like that, remove it so we will find the image even if its name is _IIM (one underscore)
echo SHORTAUTOPRD=`echo $AUTOPRD | sed &apos;s:_.*$::&apos;` &gt;&gt; generated_ipp_version.properties

TARGET=`echo $REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;`
echo TARGET=${TARGET} &gt;&gt; generated_ipp_version.properties</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>generated_ipp_version.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <hudson.tasks.Shell>
      <command># Check if the image exist already in the Artifactory - if exist, exit without error
# The grep -v flag exclude the pattern, needed when the img name contains _logs_ in case of LOG=1
User=$artifactory_user:$artifactory_pass

SubTAG=$(git describe --tags --abbrev=0 | cut -d. -f1-4)

if [[ &quot;$MAKE_CMD&quot; =~ &quot;LOG=1&quot; ]]; then LogFlag=&quot;&quot;; else LogFlag=&quot;-v&quot;; fi
outputName=$(curl -ks -u $User https://artifactory/api/storage/ipp-review/SFB/${GERRIT_BRANCH}/$TARGET | grep img | grep $LogFlag _logs_ | grep UC${SHORTAUTOPRD}_ | grep $SubTAG || true)
if [ &quot;$outputName&quot; != &quot;&quot; ]; then
   lastTAG=$(git describe --tags --abbrev=0)
   echo Found: $outputName ----- Last TAG is: $lastTAG
   if [[ &quot;$outputName&quot; =~ &quot;_${lastTAG}_&quot; ]]; then
     echo ${GERRIT_BRANCH}/$TARGET/$SHORTAUTOPRD exist already... Abort without error;
     exit 0
   fi
fi

# ipp_AT_build is running now?
allRunning=$(curl -ks &quot;https://jenkins/computer/api/json?tree=computer\[executors\[currentExecutable\[url\]\],\
oneOffExecutors\[currentExecutable\[url\]\]\]&quot; | \
sed -e &apos;s/&quot;url&quot;:&quot;/\n/g&apos; | sed &apos;s/&quot;}}.*//g&apos; | tail -n +2 | grep ipp_AT_build | grep -v SIM || echo Job ipp_AT_build not found)

for job in $(echo $allRunning | sed &apos;s: :\n:g&apos;); do
   if curl -ks &quot;${job}api/json?tree=actions\[parameters\[value\]\]&quot; | grep -q &quot;$AUTOPRD&quot;; then
      echo &quot;ipp_AT_build is running now, job $job, the files are not ready yet&quot;; 
      exit 0
    fi
done

#if branch name contain &quot;3.2&quot;, download C450HD_kernel submodule
if [[ &quot;$GERRIT_BRANCH&quot; == *&quot;3.2&quot;* &amp;&amp; &quot;$SHORTAUTOPRD&quot; == &quot;C450HD&quot; ]]
	then git submodule init
    	git submodule update    	
fi

#compile:
export PATH=/opt/ipp_toolchain/gcc-wrapper:$PATH
export LD_LIBRARY_PATH=/opt/ipp_toolchain/mipselgcc4.4_24kc/usr/lib/
yes | make distclean

NumExecuting=$(echo &quot;$MAKE_CMD&quot; |  awk -F &apos;&amp;&apos; &apos;{print NF}&apos;)
IMGNAME=`echo $REFSPEC | sed &apos;s:refs/changes/../::; s:/:.:g&apos;`

for ((i=1;i&lt;=$NumExecuting;i++)); do 
  PARAMS=`echo $MAKE_CMD | cut -d&quot;&amp;&quot; -f$i`
  make $PARAMS SUBVERSION=${IMGNAME}
done
#change size_report name to 450HD_SIZE_REPORT.csv
NEWTAGSizeReport=$(find | grep size_report.csv | cut -d&apos;/&apos; -f3) || true
mv build/${NEWTAGSizeReport} build/${AUTOPRD}_size_report.csv || true
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>.*(ClosedChannel|no workspace from node|Workspace is not accessible|node is offline|Error fetching remote|JNLP4-connect connection).*</regexpForRerun>
      <rerunIfUnstable>false</rerunIfUnstable>
      <rerunMatrixPart>true</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestChildrenRetriggerAll</regexpForMatrixStrategy>
      <noChildStrategy>RerunWhole</noChildStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>1800</delay>
      </delay>
      <maxSchedule>0</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.StatusCondition" plugin="run-condition@1.0">
            <worstResult>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </worstResult>
            <bestResult>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </bestResult>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.6.0">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>FAILURE</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <EnvInjectBuilder plugin="envinject@2.1.5">
                        <info>
                          <propertiesFilePath>generated_ipp_version.properties</propertiesFilePath>
                        </info>
                      </EnvInjectBuilder>
                      <hudson.tasks.Shell>
                        <command>change=`echo $REFSPEC | cut -d/ -f4`
ps=`echo $REFSPEC | cut -d/ -f5`
#chmod 600 id_rsa_gerrit

echo Send failed message to Gerrit - $change,$newPS
ssh -p 29418 jenkins@gerrit gerrit review \
--message &quot;&apos;Compilation Failed - $BUILD_URL&apos;&quot; \
--notify OWNER --label Automation-Test=-1 \
--tag &quot;&apos;Automation&apos;&quot; \
$change,$ps
</command>
                      </hudson.tasks.Shell>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
            <command>if [[ &quot;$GERRIT_BRANCH&quot; == *&quot;3.0&quot;* || &quot;$GERRIT_BRANCH&quot; == *&quot;3.1&quot;* ]]
then
exit 1
fi
</command>
          </condition>
          <publisherList>
            <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@2.6.0">
              <config>
                <scriptFiles/>
                <groovyScripts/>
                <buildSteps>
                  <org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                    <results>
                      <string>SUCCESS</string>
                    </results>
                    <role>BOTH</role>
                    <buildSteps>
                      <hudson.tasks.Shell>
                        <command>change=`echo $REFSPEC | cut -d/ -f4`
ps=`echo $REFSPEC | cut -d/ -f5`
User=&quot;$artifactory_user:$artifactory_pass&quot;
artifactory_host=artifactory
artifactory_url=https://$artifactory_host/ipp-release/com/ac/ipp/SFB
curlHasFailed=&quot;False&quot;
sizeReduced=&quot;False&quot;
NEWLINE=$&apos;\n&apos;
echo sizeReduced=${sizeReduced} &gt; properties
if [[ ! -e build ]]
then
echo &quot;Build Folder Doesnt Exists, doesn&apos;t have size_report&quot;
exit 0
fi
#get from build folder the CSV REPORTS
cd build
NEWTAGSizeReport=$(find | grep *_size_report.csv | cut -d&apos;/&apos; -f2)
OLDTAG=$(git describe | cut -d&apos;-&apos; -f1)
curl -k -u ${User} --insecure -fO &quot;${artifactory_url}/${GERRIT_BRANCH}/${OLDTAG}/${AUTOPRD}/${OLDTAG}_size_report.csv&quot; || curlHasFailed=&quot;True&quot;
if [[ &quot;$curlHasFailed&quot; == &quot;True&quot; ]]
then
	echo &quot;*************Not found in artifactory ${OLDTAG}******************&quot;
	 #put me and jontan reviewrs
     ssh -p 29418 jenkins@gerrit &quot;gerrit set-reviewers -a Ben.Magriso@audiocodes.com -a Jonatan.Reberger@audiocodes.com ${GERRIT_PATCHSET_REVISION}&quot;
fi
#if its running with flag LOG=1 dont run the script	
if [[ &quot;$MAKE_CMD&quot; =~ &quot;LOG=1&quot; ]]
then
	echo &quot;Running with Flag LOG=1, Not Running the Script&quot;
    exit 0
fi

cd ${WORKSPACE}
echo &quot;*********************************************************&quot;
set +e
sh scripts/mtds_size.sh size_diff build/${OLDTAG}_size_report.csv build/${NEWTAGSizeReport}
RetunedValue=$?
echo $RetunedValue
echo &quot;*********************************************************&quot;







#get Size Current Status
CURL=&quot;curl -kn -u jenkins:$jenkins_pass --silent&quot;
sizeStatus=$($CURL -X GET &quot;https://gerrit/a/changes/${GIT_COMMIT}/reviewers/4&quot; --header &quot;Content-Type: application/json;charset=UTF-8&quot;  | grep Size | cut -d: -f2 |sed &apos;s/[&quot;, ]//g&apos;)
 #not fail the build if fail give score 


# 0 =&gt; Size Checker Passed
if [[ $RetunedValue == &quot;0&quot; ]]
then
	echo &quot;size_diff Test has passed on model ${AUTOPRD}&quot;
	if [[ $sizeStatus == &quot;0&quot; ]]
	then
		ssh -p 29418 jenkins@gerrit gerrit review --notify NONE --label Size=+1 ${GIT_COMMIT}
	fi
# 1 =&gt; Size Checker Failed    
elif [[ $RetunedValue == &quot;1&quot; ]]
then
	if [[ $sizeStatus == &quot;0&quot; ]]
	then
		ssh -p 29418 jenkins@gerrit gerrit review --notify NONE --label Size=-1 ${GIT_COMMIT}
	elif [[ $sizeStatus == &quot;+1&quot; ]]
	then
		ssh -p 29418 jenkins@gerrit gerrit review --notify NONE --label Size=-1 ${GIT_COMMIT}
    fi
	message=&quot;size_diff Test has failed on model ${AUTOPRD}. You can see the output here: ${BUILD_URL}artifact/build${NEWLINE}Please make sure this increased size can not be avoided.${NEWLINE}To approve this change please contact Arik Kabessa.&quot;
    ssh -p 29418 jenkins@gerrit gerrit review --notify NONE --message &quot;&apos;${message}&apos;&quot; $change,$ps
# 2 =&gt; Size Checker Passed and reduced model size    
elif [[ $RetunedValue == &quot;2&quot; ]]
then
	if [[ $sizeStatus == &quot;0&quot; ]]
	then
		ssh -p 29418 jenkins@gerrit gerrit review --notify NONE --label Size=+1 ${GIT_COMMIT}
	fi
   	sizeReduced=&quot;True&quot;
else
   	echo &quot;ERROR&quot;
fi
  
echo sizeReduced=${sizeReduced} &gt; properties


</command>
                      </hudson.tasks.Shell>
                      <EnvInjectBuilder plugin="envinject@2.1.5">
                        <info>
                          <propertiesFilePath>properties</propertiesFilePath>
                        </info>
                      </EnvInjectBuilder>
                    </buildSteps>
                  </org.jenkinsci.plugins.postbuildscript.model.PostBuildStep>
                </buildSteps>
                <markBuildUnstable>false</markBuildUnstable>
              </config>
            </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
            <hudson.tasks.ArtifactArchiver>
              <artifacts>build/size_diff_report*.txt</artifacts>
              <allowEmptyArchive>true</allowEmptyArchive>
              <onlyIfSuccessful>false</onlyIfSuccessful>
              <fingerprint>false</fingerprint>
              <defaultExcludes>true</defaultExcludes>
              <caseSensitive>true</caseSensitive>
            </hudson.tasks.ArtifactArchiver>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.0">
            <command>if [[ &quot;$GERRIT_BRANCH&quot; == *&quot;3.0&quot;* || &quot;$GERRIT_BRANCH&quot; == *&quot;3.1&quot;* ]]
then
exit 1
fi</command>
          </condition>
          <publisherList>
            <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
              <configs>
                <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
                  <configs>
                    <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
                    <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                      <properties>BUILD_BRANCH=${GERRIT_BRANCH}
GERRIT_REFSPEC=${REFSPEC}
</properties>
                      <textParamValueOnNewLine>false</textParamValueOnNewLine>
                    </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
                  </configs>
                  <projects>ippSizeChecker_Review</projects>
                  <condition>SUCCESS</condition>
                  <triggerWithNoParameters>false</triggerWithNoParameters>
                  <triggerFromChildProjects>false</triggerFromChildProjects>
                </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
              </configs>
            </hudson.plugins.parameterizedtrigger.BuildTrigger>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
          <aggregationCondition class="org.jenkins_ci.plugins.run_condition.core.AlwaysRun" plugin="run-condition@1.0"/>
          <aggregationRunner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$DontRun" plugin="run-condition@1.0"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>REFSPEC=${REFSPEC}
GERRIT_BRANCH=${GERRIT_BRANCH}
IMAGE=${AUTOPRD}
EMAIL=${EMAIL}
</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>ipp_AT_copyfiles</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>true</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <patterns>
        <hudson.plugins.ws__cleanup.Pattern>
          <pattern>.git/index.lock</pattern>
          <type>INCLUDE</type>
        </hudson.plugins.ws__cleanup.Pattern>
      </patterns>
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.2.5">
      <script>echo =====Start Gerrit message =======
revisions=$(echo $REFSPEC | cut -d/ -f4,5 | sed &apos;s:/:/revisions/:&apos;)
curl -kns -u jenkins:${jenkins_pass} -X POST https://gerrit/a/changes/$revisions/review \
  -d &apos;{&quot;message&quot;: &quot;Automation Test compilation has started - &apos;$BUILD_URL&apos;&quot;, &quot;notify&quot;: &quot;NONE&quot;,&quot;labels&quot;: { &quot;Automation-Test&quot;: &quot;0&quot;},&quot;tag&quot;: &quot;autogenerated:AT&quot;}&apos; \
  -H &apos;Content-Type: application/json&apos;
echo ======End gerrit message  -  clean AT vote before starting=======</script>
      <scriptType>unixScript</scriptType>
      <runOnlyOnParent>true</runOnlyOnParent>
      <hideEnvironmentVariablesValues>false</hideEnvironmentVariablesValues>
    </com.lookout.jenkins.EnvironmentScript>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.1.0">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect>ipp-review</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deployReleaseRepository>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>false</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/build/image/*$SHORTAUTOPRD*.img=&gt;SFB/${GERRIT_BRANCH}/$TARGET
</deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>true</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <artifactoryCombinationFilter>label==&quot;ipp-centos7.4&quot;</artifactoryCombinationFilter>
      <multiConfProject>true</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectBuildWrapper plugin="envinject@2.1.5">
      <info>
        <propertiesContent>artifactory_user=admin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.43">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_pass</name>
          <value>{AQAAABAAAAAQZoBhW+9Hoyx1YyaIOi0eNgaUZLKBnKnbhKmqGS7z+5w=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>jenkins_pass</name>
          <value>{AQAAABAAAAAQjSqHsQ28UQSIrEiSI1QpE7673VjgziZOWM6Z+orsjcc=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER}__branch:${GERRIT_BRANCH} ${REFSPEC}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <childCustomWorkspace>${SHORT_COMBINATION}</childCustomWorkspace>
</matrix-project>