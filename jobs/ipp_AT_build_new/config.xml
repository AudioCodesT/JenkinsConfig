<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Activated by Automation Test&#xd;
Wait until all builds are ready and check if the last patch-set is a none codes changes and use the previous change-set</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>5</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.PasswordParameterDefinition>
          <name>REFSPEC</name>
          <description></description>
          <defaultValue>{AQAAABAAAAAQC4OUA1Mr5wsqrlorzJLl+yAXiY2jwwDWdUlhF+iKSvA=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>EMAIL</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.1.5">
      <info>
        <secureGroovyScript plugin="script-security@1.54.2">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>sanjer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>
echo =====Start Gerrit message =======
revisions=$(echo $REFSPEC | cut -d/ -f4,5 | sed &apos;s:/:/revisions/:&apos;)
### curl -kns -u jenkins:${jenkins_pass} -X POST https://gerrit/a/changes/$revisions/review \
###  -d &apos;{&quot;message&quot;: &quot;Automation Test compilation has started Clear AT score - &apos;$BUILD_URL&apos;&quot;, &quot;notify&quot;: &quot;NONE&quot;,&quot;labels&quot;: { &quot;Automation-Test&quot;: &quot;0&quot;},&quot;tag&quot;: &quot;autogenerated:AT&quot;}&apos; \
###  -H &apos;Content-Type: application/json&apos;
echo ======End gerrit message  -  clean AT vote before starting=======

set -x
echo &quot; ============checking if the build is running also in ippReview_SFB===========&quot;
sleep 90
#get all current running builds in ippReview_SFB
builds_numbers=($(curl --insecure -X GET &quot;https://jenkins/computer/api/json?depth=1&amp;xpath=//url&amp;wrapper=builds&amp;pretty=true&quot; | grep -w &quot;https://jenkins/job/ippReview_SFB/[[:digit:]]*/&quot;  | awk -F&apos;/&apos; &apos;{print $6}&apos;))

#get all builds number that in queue
queue_builds_numbers=($(curl --insecure -X GET &quot;https://jenkins/queue/api/json?depth=1&amp;xpath=//url&amp;pretty=true&quot; | grep nextBuildNumber | cut -d&apos;:&apos; -f2 | cut -d&apos;,&apos; -f1))

#add the two lists together (those who running and those who in queue)
builds_numbers=(&quot;${builds_numbers[@]}&quot; &quot;${queue_builds_numbers[@]}&quot;)

#remove duplicates
builds_numbers=($(echo ${builds_numbers[@]} | xargs -n1 | sort -u | xargs))
echo &quot;${builds_numbers[@]}&quot;

#iterate over all current running builds of ippReview_SFB and check if current change is running
for build_number in ${builds_numbers[@]}
do
build_gerrit_refspec=$(curl --insecure -X GET &quot;https://jenkins/job/ippReview_SFB/${build_number}/injectedEnvVars/export&quot; | grep &quot;GERRIT_REFSPEC&quot; | cut -d&apos;=&apos; -f2)
if [[ &quot;${REFSPEC}&quot; == &quot;${build_gerrit_refspec}&quot; ]]
then
current_change_build_number=${build_number}
fi
done

#check if job is running
CURL_URL=&quot;https://jenkins/job/ippReview_SFB/${current_change_build_number}/api/json&quot;
curl --insecure -X GET ${CURL_URL} |  grep result\&quot;:null &gt; /dev/null
GREP_RETURN_CODE=$?
while [ $GREP_RETURN_CODE -eq 0 ]
do
    	echo &quot;==========BUILD IS RUNNING ==========&quot;
    	sleep 240
    	# Grep will return 0 while the build is running
    	curl --insecure -X GET ${CURL_URL} |  grep result\&quot;:null &gt; /dev/null
    	GREP_RETURN_CODE=$?
done
echo &quot;==========The build in ippReview_SFB is done ==========&quot;

User=&quot;$artifactory_user:$artifactory_password&quot;
Artifactory=&quot;https://artifactory/api/storage/ipp-review/SFB&quot;
DOWNLOAD=$(echo $Artifactory | sed &apos;s|api/storage/||&apos;)
CHANGES=`echo $REFSPEC | sed &apos;s:refs/changes/../::&apos;`
REFTARGET=`echo $CHANGES | sed &apos;s:/:-:g&apos;`
NEWREFTARGET=$REFTARGET

# if file was compiled successfully but not yet deployed to artifactory, then wait 30 sec
if ! curl -ks -u $User -X GET $Artifactory/${GERRIT_BRANCH}/$REFTARGET | grep -q .img; then
  echo img was not found, check if this patch-set will be compiled or no code was changed
  change=`echo $CHANGES | cut -d/ -f1`
  ps=`echo $CHANGES | cut -d/ -f2`
  ssh -p 29418  jenkins@gerrit gerrit query --patch-sets $change | grep  &apos;kind:\|number:&apos; | tail -n +2 | sed &apos;s/ //g&apos; &gt; /tmp/$change.txt
# $field Could be: number or kind
# $kind could be: REWORK, TRIVIAL_REBASE, MERGE_FIRST_PARENT_UPDATE, NO_CODE_CHANGE or NO_CHANGE
  lastREWORK=1
  while IFS=: read -r field value; do   
    if [ &quot;$field&quot; == &quot;number&quot; ]; then checkPS=$value;
    else
      echo Check PS $checkPS: $value;
      if [[ ! &quot;$value&quot; =~ &quot;NO_&quot; ]]; then lastREWORK=$checkPS; fi
    fi
  done &lt; /tmp/$change.txt

  if [ &quot;$ps&quot; -eq &quot;$lastREWORK&quot; ]; then
    echo img file not ready, try again...
    exit 2
  fi
  
  CHANGES=&quot;$change/$lastREWORK&quot;
  REFTARGET=`echo $CHANGES | sed &apos;s:/:-:g&apos;`
  if ! curl -ks -u $User -X GET $Artifactory/${GERRIT_BRANCH}/$REFTARGET | grep -q .img; then
    echo img for patch-set $lastREWORK file not ready, try again...
    exit 2
  fi
  
  NEWREFTARGET=$(echo $REFSPEC | sed -e &apos;s:\(.*/\).*:\1&apos;$lastREWORK:)
fi

echo NEWREFTARGET=${NEWREFTARGET} &gt; ipp_AT.properties
</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>ipp_AT.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>REFSPEC=${NEWREFTARGET}
GERRIT_BRANCH=${GERRIT_BRANCH}
IMAGE=445HD
EMAIL=${EMAIL}
</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>ipp_AT_copyfiles</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@2.1.5">
      <info>
        <propertiesContent>artifactory_user=admin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.54.2">
          <script></script>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>artifactory_pass</name>
          <value>{AQAAABAAAAAQVZYxoZKn6CJmDEZkH2vMB6zT3n/oDex1MkVciG1YIuc=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>jenkins_pass</name>
          <value>{AQAAABAAAAAQy4Z+FM5FNakh/FOUz7a3fmlMVDlsg/Hse+ec/EbXxbc=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER}__branch:${GERRIT_BRANCH} ${REFSPEC}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>