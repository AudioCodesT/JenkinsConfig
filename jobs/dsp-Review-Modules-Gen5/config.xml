<?xml version='1.1' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.14">
  <actions/>
  <description>triggered by &quot;dsp-Review-Modules&quot;&#xd;
1. preparing workspace (with repo init, repo sync)&#xd;
2. go to the module folder and downloading the new change (received by parameter)&#xd;
3. go to Gen5 Folder and run copyModules.sh script (to prepare Gen5 workspace for compile)&#xd;
4. compile Gen5</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>15</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Module_Project</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/heads/${GERRIT_BRANCH}:refs/remotes/origin/${GERRIT_BRANCH}</refspec>
        <url>ssh://jenkins@gerrit:29418/DSP/Gen5</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>refs/heads/${GERRIT_BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
      <hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
        <sparseCheckoutPaths>
          <hudson.plugins.git.extensions.impl.SparseCheckoutPath>
            <path>chips2compile.yml</path>
          </hudson.plugins.git.extensions.impl.SparseCheckoutPath>
        </sparseCheckoutPaths>
      </hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
    </extensions>
  </scm>
  <assignedNode>dsp-centos-dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <org.jenkinsci.plugins.yamlaxis.YamlAxis plugin="yaml-axis@0.2.0">
      <name>CHIP_NAME</name>
      <values>
        <string>chips2compile.yml</string>
      </values>
    </org.jenkinsci.plugins.yamlaxis.YamlAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>dsp-centos-dynamic</string>
        <string>dsp-grx-slave</string>
        <string>dsp-win-dynamic</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <combinationFilter>(label == &apos;dsp-centos-dynamic&apos; &amp;&amp; CHIP_NAME == &apos;Intel&apos;) || (label == &apos;dsp-win-dynamic&apos; &amp;&amp; CHIP_NAME != &apos;Intel&apos; &amp;&amp; CHIP_NAME != &apos;GRX&apos;) || (label == &apos;dsp-grx-slave&apos; &amp;&amp; CHIP_NAME == &apos;GRX&apos;) </combinationFilter>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${label}</arg1>
        <arg2>dsp-win-dynamic</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!c:\cygwin64\bin\bash --login -i
set -ex
cd ${WORKSPACE}
TARGET=`echo $GERRIT_REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;`


echo &quot;repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}&quot;
repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}
echo &quot;repo sync&quot;
repo sync -j$(nproc) --force-sync

# get the module name
module=$(echo $Module_Project | awk -F &apos;/&apos; &apos;{print $NF}&apos;)



if [[ &quot;$module&quot; != &quot;NEU&quot; ]]
then
	# cd to releant path
	cd Modules/${module}
	echo &quot;git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC&quot;
	git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC &amp;&amp; git checkout FETCH_HEAD

fi


#copy all modules to relevant path in Gen5 Modules directory
cd ${WORKSPACE}/Gen5
echo &quot;sh copyModules.sh&quot;
sh copyModules.sh

#*******************************************************************************************************************************
if [[ &quot;$module&quot; == &quot;NEU&quot; ]]
then
	artifactory_user=admin
	if [[ &quot;$GERRIT_BRANCH&quot; == &quot;710&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;723&quot; ]]
    then
    	files_to_download=(&quot;neu_gmac_c.a64P&quot; &quot;pktutl_c.a64P&quot; &quot;util_a.a64P&quot; &quot;util_c.a64P&quot;)
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network/Lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network/Lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d&apos; &apos; -f2 | cut -c 1-32)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
            curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
    if [[ &quot;$GERRIT_BRANCH&quot; == &quot;722&quot; ]]
    then
    	files_to_download=(&quot;neu_gmac_c.ae66&quot; &quot;pktutl_c.ae66&quot; &quot;util_a.ae66&quot; &quot;util_c.ae66&quot;)
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}&quot; 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d&apos; &apos; -f2 | cut -c 1-32)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
fi
#*******************************************************************************************************************************


echo &quot;cp /cygdrive/c/TI/NMAKE/NMAKE.EXE ${WORKSPACE}/Gen5/${CHIP_NAME}/Device/NMAKE.EXE&quot;
cp /cygdrive/c/TI/NMAKE/NMAKE.EXE ${WORKSPACE}/Gen5/${CHIP_NAME}/Device/NMAKE.EXE



echo &quot;******************* change ${CHIP_NAME} makefile version number****************************&quot;
OLDTAG=$(git describe --first-parent --tags | sed &apos;s/\(.*\)-.*/\1/&apos;)
VER=${OLDTAG}
VERSION=$(echo ${OLDTAG} | cut -d&apos;.&apos; -f1)
SUBVERSION=$(echo ${OLDTAG} | cut -d&apos;.&apos; -f2)
sed -i &quot;s/%major.minor%/${VER}/g&quot; ${CHIP_NAME}/Device/makefile
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/Device/makefile
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/Device/makefile
echo &quot;*******************************************************************************************&quot;



echo TARGET=${TARGET} &gt;&gt; ${WORKSPACE}/generated_dsp.properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.BatchFile>
          <command>cd &quot;%WORKSPACE%\Gen5\%CHIP_NAME%\Device&quot;&#xd;
NMAKE.EXE ReBuildAll BUILD_ON_MAKER_MACHINE=1&#xd;
&#xd;
if %ERRORLEVEL% NEQ 0 exit &#xd;
echo “Successful completion”&#xd;
&#xd;
&#xd;
cd &quot;%WORKSPACE%\Gen5\%CHIP_NAME%\Out&#xd;
powershell Compress-Archive . Out.zip&#xd;
cd &quot;%WORKSPACE%\Gen5\%CHIP_NAME%\Misc&#xd;
powershell Compress-Archive . Misc.zip</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${label}</arg1>
        <arg2>dsp-centos-dynamic</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>compile_intel(){
cd ${WORKSPACE}/Gen5/Intel/$1
output_textfile_name=$(echo $1 | sed &apos;s/\//_/g&apos;)
make clean
make all
}

cd ${WORKSPACE}
set -xe

echo &quot;repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}&quot;
repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}
echo &quot;repo sync&quot;
repo sync -j$(nproc) --force-sync

TARGET=`echo $GERRIT_REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;`
# get the module name
module=$(echo $Module_Project | awk -F &apos;/&apos; &apos;{print $NF}&apos;)

if [[ &quot;$module&quot; != &quot;NEU&quot; ]]
then
	# cd to releant path
	cd Modules/${module}
	echo &quot;git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC&quot;
	git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC &amp;&amp; git checkout FETCH_HEAD

fi


#copy all modules to relevant path in Gen5 Modules directory
cd ${WORKSPACE}/Gen5
echo &quot;sh copyModules.sh&quot; ${CHIP_NAME}
sh copyModules.sh ${CHIP_NAME}

#*******************************************************************************************************************************
if [[ &quot;$module&quot; == &quot;NEU&quot; ]]
then
	artifactory_user=admin
	if [[ &quot;$GERRIT_BRANCH&quot; == &quot;710&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;723&quot; ]]
    then
    	files_to_download=(&quot;neu_gmac_c.a64P&quot; &quot;pktutl_c.a64P&quot; &quot;util_a.a64P&quot; &quot;util_c.a64P&quot;)
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network/Lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network/Lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d&apos; &apos; -f2 | cut -c 1-32)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
            curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
    if [[ &quot;$GERRIT_BRANCH&quot; == &quot;722&quot; ]]
    then
    	files_to_download=(&quot;neu_gmac_c.ae66&quot; &quot;pktutl_c.ae66&quot; &quot;util_a.ae66&quot; &quot;util_c.ae66&quot;)
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}&quot; 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d&apos; &apos; -f2 | cut -c 1-32)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
fi
#*******************************************************************************************************************************



echo &quot;******************* change ${CHIP_NAME} makefile version number****************************&quot;
OLDTAG=$(git describe --first-parent --tags | sed &apos;s/\(.*\)-.*/\1/&apos;)
VERSION=$(echo ${OLDTAG} | cut -d&apos;.&apos; -f1)
SUBVERSION=$(echo ${OLDTAG} | cut -d&apos;.&apos; -f2)
RELEASE_DATE=$(date +&quot;%Y%d%m&quot;)
RELEASE_DATE=$(expr $RELEASE_DATE + 0)
echo &quot;update ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i &quot;s/%RELEASE_DATE%/${RELEASE_DATE}/g&quot; ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
echo &quot;update ${CHIP_NAME}/SoftHost/Src/VersionInfo.h&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftHost/Src/VersionInfo.h
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftHost/Src/VersionInfo.h
sed -i &quot;s/%RELEASE_DATE%/${RELEASE_DATE}/g&quot; ${CHIP_NAME}/SoftHost/Src/VersionInfo.h
echo &quot;update ${CHIP_NAME}/SoftDsp/communicator_64/makefile&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftDsp/communicator_64/makefile
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftDsp/communicator_64/makefile
echo &quot;update ${CHIP_NAME}/SoftDsp/Hpi_64/makefile&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
echo &quot;update ${CHIP_NAME}/SoftHost/communicator_64/makefile&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftHost/communicator_64/makefile
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftHost/communicator_64/makefile
echo &quot;update ${CHIP_NAME}/SoftHost/Hpi_64/makefile&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftHost/Hpi_64/makefile
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftHost/Hpi_64/makefile
echo &quot;*******************************************************************************************&quot;




#run all 4 make in parallel (SoftDsp and SoftHost)
if [[ ${CHIP_NAME} == &quot;Intel&quot; ]]
then
	run_make=(&quot;SoftDsp/communicator_64&quot; &quot;SoftDsp/Hpi_64&quot; &quot;SoftHost/communicator_64&quot; &quot;SoftHost/Hpi_64&quot;)
	for path_to_run_make in ${run_make[@]}
	do
		compile_intel $path_to_run_make
	done
fi
wait
echo &quot;Finish running make for SoftDsp and SoftHost&quot;


echo TARGET=${TARGET} &gt;&gt; ${WORKSPACE}/generated_dsp.properties

echo &quot;******************* Set ${CHIP_NAME} Extended Attributes  ***************************&quot;
files_to_set_attributes=(&quot;${WORKSPACE}/Gen5/${CHIP_NAME}/SoftDsp/communicator_64/Soft*&quot; &quot;${WORKSPACE}/Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/Soft*&quot; &quot;${WORKSPACE}/Gen5/${CHIP_NAME}/SoftHost/communicator_64/Soft*&quot; &quot;${WORKSPACE}/Gen5/${CHIP_NAME}/SoftHost/Hpi_64/Soft*&quot;)
for file_to_set_attribue in ${files_to_set_attributes[@]}
do
	setfattr -n user.Version -v ${VERSION} ${file_to_set_attribue}
	setfattr -n user.SubVersion -v ${SUBVERSION}  ${file_to_set_attribue}
	setfattr -n user.Date -v ${RELEASE_DATE}  ${file_to_set_attribue}
	setfattr -n user.Revision -v 0 ${file_to_set_attribue}
done
echo &quot;*******************************************************************************************&quot;</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${label}</arg1>
        <arg2>dsp-grx-slave</arg2>
        <ignoreCase>false</ignoreCase>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>compile_grx(){
cd ${WORKSPACE}/Gen5/GRX/$1
output_textfile_name=$(echo $1 | sed &apos;s/\//_/g&apos;)
make clean
make all
}
run_make=(&quot;SoftDsp/Hpi_64&quot; &quot;SoftHost/Hpi_64&quot;)

cd ${WORKSPACE}
set -xe

echo &quot;repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}&quot;
repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}
echo &quot;repo sync&quot;
repo sync -j$(nproc) --force-sync


TARGET=`echo $GERRIT_REFSPEC | sed &apos;s:refs/changes/../::; s:/:-:g&apos;`
# get the module name
module=$(echo $Module_Project | awk -F &apos;/&apos; &apos;{print $NF}&apos;)


if [[ &quot;$module&quot; != &quot;NEU&quot; ]]
then
	# cd to releant path
	cd Modules/${module}
	echo &quot;git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC&quot;
	git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC &amp;&amp; git checkout FETCH_HEAD

fi


#copy all modules to relevant path in Gen5 Modules directory
cd ${WORKSPACE}/Gen5
echo &quot;sh copyModules.sh&quot; ${CHIP_NAME}
sh copyModules.sh ${CHIP_NAME}

#*******************************************************************************************************************************
if [[ &quot;$module&quot; == &quot;NEU&quot; ]]
then
	artifactory_user=admin
	if [[ &quot;$GERRIT_BRANCH&quot; == &quot;710&quot; || &quot;$GERRIT_BRANCH&quot; == &quot;723&quot; ]]
    then
    	files_to_download=(&quot;neu_gmac_c.a64P&quot; &quot;pktutl_c.a64P&quot; &quot;util_a.a64P&quot; &quot;util_c.a64P&quot;)
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network/Lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network/Lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d&apos; &apos; -f2 | cut -c 1-32)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
            curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
    if [[ &quot;$GERRIT_BRANCH&quot; == &quot;722&quot; ]]
    then
    	files_to_download=(&quot;neu_gmac_c.ae66&quot; &quot;pktutl_c.ae66&quot; &quot;util_a.ae66&quot; &quot;util_c.ae66&quot;)
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}&quot; --output &quot;${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}&quot;
            local_md5=$(md5sum &quot;${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}&quot; | cut -d&apos; &apos; -f1 | cut -d&apos;\&apos; -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I &quot;https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}&quot; 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d&apos; &apos; -f2 | cut -c 1-32)
          	if [ &quot;$local_md5&quot; != &quot;$remote_md5&quot; ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
fi
#*******************************************************************************************************************************


echo &quot;******************* change ${CHIP_NAME} makefile version number****************************&quot;
OLDTAG=$(git describe --first-parent --tags | sed &apos;s/\(.*\)-.*/\1/&apos;)
VERSION=$(echo ${OLDTAG} | cut -d&apos;.&apos; -f1)
SUBVERSION=$(echo ${OLDTAG} | cut -d&apos;.&apos; -f2)
RELEASE_DATE=$(date +&quot;%Y%d%m&quot;)
RELEASE_DATE=$(expr $RELEASE_DATE + 0)
echo &quot;update ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i &quot;s/%RELEASE_DATE%/${RELEASE_DATE}/g&quot; ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
echo &quot;update ${CHIP_NAME}/SoftDsp/Hpi_64/makefile&quot;
sed -i &quot;s/%major%/${VERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
sed -i &quot;s/%minor%/${SUBVERSION}/g&quot; ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
echo &quot;*******************************************************************************************&quot;





sudo /dce/scripts/dce.sh -a chroot -e UGW7.2 -c &quot;set -xe;cd ${WORKSPACE}/Gen5/GRX/SoftDsp/Hpi_64;make clean;chmod 775 fwhostpkg/*;chmod 775 make_file_grx;./make_file_grx&quot;
if [[ $GERRIT_BRANCH == 723 || $GERRIT_BRANCH == 724 ]]
then
	GRX_SUBVERSION=$(echo ${SUBVERSION} | cut -d&apos;-&apos; -f1)
	sudo /dce/scripts/dce.sh -a chroot -e UGW7.2 -c &quot;set -xe;cd ${WORKSPACE}/Gen5/GRX/SoftDsp/Hpi_64;chmod 775 GrxCreateVersion;ls -al;./GrxCreateVersion grx ac_fw_grx.fwb AC506012ae3.${VERSION}.${GRX_SUBVERSION} grxdsp fw_grx.map;rm -rf Soft*.bin Soft*.srec&quot;
fi
echo TARGET=${TARGET} &gt;&gt; ${WORKSPACE}/generated_dsp.properties</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>generated_dsp.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.2.5">
      <script>module=$(echo $Module_Project | awk -F &apos;/&apos; &apos;{print $NF}&apos;)
echo &quot;module=${module}&quot;</script>
      <scriptType>unixScript</scriptType>
      <runOnlyOnParent>true</runOnlyOnParent>
      <hideEnvironmentVariablesValues>false</hideEnvironmentVariablesValues>
    </com.lookout.jenkins.EnvironmentScript>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.1.0">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/Out/Out.zip&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
            &quot;props&quot;: &quot;type=zip;status=ready&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        },
        {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/Misc/Misc.zip&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Misc/&quot;,
            &quot;props&quot;: &quot;type=zip;status=ready&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        },
        {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftDsp/communicator_64/Soft*&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        }, 
       {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/Soft*&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        },
       {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/*.fwb&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        },
        {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/AC506012ae3*&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        },
        {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/fw*.map&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        },
        {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftHost/communicator_64/Soft*&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        }, 
       {
            &quot;pattern&quot;: &quot;Gen5/${CHIP_NAME}/SoftHost/Hpi_64/Soft*&quot;,
            &quot;target&quot;: &quot;dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/&quot;,
             &quot;recursive&quot;: &quot;false&quot;
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <artifactoryCombinationFilter>(label == &apos;dsp-win-dynamic&apos; || label == &apos;dsp-centos-dynamic&apos; || label == &apos;dsp-grx-slave&apos;)</artifactoryCombinationFilter>
      <multiConfProject>true</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jpass</name>
          <value>{AQAAABAAAAAQXE33New0y0o/0ChYBDNqb2U4iLYw1MB/TBcPh10LRxI=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQTt8JWIAywZYc+LAouCyjb0x3ajj8eKm1obYgLMoc53U=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER}_Module:${module}_Branch:${GERRIT_BRANCH}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <childCustomWorkspace>Gen5</childCustomWorkspace>
</matrix-project>