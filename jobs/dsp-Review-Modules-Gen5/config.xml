<?xml version="1.1" encoding="UTF-8" standalone="no"?><matrix-project plugin="matrix-project@1.14">
  <actions/>
  <description>triggered by "dsp-Review-Modules"&#13;
1. preparing workspace (with repo init, repo sync)&#13;
2. go to the module folder and downloading the new change (received by parameter)&#13;
3. go to Gen5 Folder and run copyModules.sh script (to prepare Gen5 workspace for compile)&#13;
4. compile Gen5</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>15</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_BRANCH</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Module_Project</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFSPEC</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.2.2">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/heads/${GERRIT_BRANCH}:refs/remotes/origin/${GERRIT_BRANCH}</refspec>
        <url>ssh://jenkins@gerrit:29418/DSP/Gen5</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>refs/heads/${GERRIT_BRANCH}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
      <hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
        <sparseCheckoutPaths>
          <hudson.plugins.git.extensions.impl.SparseCheckoutPath>
            <path>chips2compile.yml</path>
          </hudson.plugins.git.extensions.impl.SparseCheckoutPath>
        </sparseCheckoutPaths>
      </hudson.plugins.git.extensions.impl.SparseCheckoutPaths>
    </extensions>
  </scm>
  <assignedNode>dsp-centos-dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <org.jenkinsci.plugins.yamlaxis.YamlAxis plugin="yaml-axis@0.2.0">
      <name>CHIP_NAME</name>
      <values>
        <string>chips2compile.yml</string>
      </values>
    </org.jenkinsci.plugins.yamlaxis.YamlAxis>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>dsp-centos-dynamic</string>
        <string>dsp-centos8-slave</string>
        <string>dsp-grx-slave</string>
        <string>dsp-win-dynamic</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <combinationFilter>(label == 'dsp-centos8-slave' &amp;&amp; CHIP_NAME == 'Intel' &amp;&amp; (GERRIT_BRANCH == "723" || GERRIT_BRANCH == "724")) || (label == 'dsp-centos-dynamic' &amp;&amp; CHIP_NAME == 'Intel') || (label == 'dsp-win-dynamic' &amp;&amp; CHIP_NAME != 'Intel' &amp;&amp; CHIP_NAME != 'GRX') || (label == 'dsp-grx-slave' &amp;&amp; CHIP_NAME == 'GRX') </combinationFilter>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.3">
        <arg1>${label}</arg1>
        <arg2>dsp-win-dynamic</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>#!c:\cygwin64\bin\bash --login -i
set -ex
cd ${WORKSPACE}
TARGET=`echo $GERRIT_REFSPEC | sed 's:refs/changes/../::; s:/:-:g'`


echo "repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}"
repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}
echo "repo sync"
repo sync -j$(nproc) --force-sync

# get the module name
module=$(echo $Module_Project | awk -F '/' '{print $NF}')



if [[ "$module" != "NEU" ]]
then
	# cd to releant path
	cd Modules/${module}
	echo "git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC"
	git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC &amp;&amp; git checkout FETCH_HEAD

fi


#copy all modules to relevant path in Gen5 Modules directory
cd ${WORKSPACE}/Gen5
echo "sh copyModules.sh"
sh copyModules.sh

#*******************************************************************************************************************************
if [[ "$module" == "NEU" ]]
then
	artifactory_user=admin
	if [[ "$GERRIT_BRANCH" == "710" || "$GERRIT_BRANCH" == "723" ]]
    then
    	files_to_download=("neu_gmac_c.a64P" "pktutl_c.a64P" "util_a.a64P" "util_c.a64P")
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network/Lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network/Lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d' ' -f2 | cut -c 1-32)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
            curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
    if [[ "$GERRIT_BRANCH" == "722" ]]
    then
    	files_to_download=("neu_gmac_c.ae66" "pktutl_c.ae66" "util_a.ae66" "util_c.ae66")
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}" 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d' ' -f2 | cut -c 1-32)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
fi
#*******************************************************************************************************************************


echo "cp /cygdrive/c/TI/NMAKE/NMAKE.EXE ${WORKSPACE}/Gen5/${CHIP_NAME}/Device/NMAKE.EXE"
cp /cygdrive/c/TI/NMAKE/NMAKE.EXE ${WORKSPACE}/Gen5/${CHIP_NAME}/Device/NMAKE.EXE



echo "******************* change ${CHIP_NAME} makefile version number****************************"
OLDTAG=$(git describe --first-parent --tags | sed 's/\(.*\)-.*/\1/')
VER=${OLDTAG}
VERSION=$(echo ${OLDTAG} | cut -d'.' -f1)
SUBVERSION=$(echo ${OLDTAG} | cut -d'.' -f2)
sed -i "s/%major.minor%/${VER}/g" ${CHIP_NAME}/Device/makefile
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/Device/makefile
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/Device/makefile
echo "*******************************************************************************************"



echo TARGET=${TARGET} &gt;&gt; ${WORKSPACE}/generated_dsp.properties</command>
        </hudson.tasks.Shell>
        <hudson.tasks.BatchFile>
          <command>cd "%WORKSPACE%\Gen5\%CHIP_NAME%\Device"&#13;
NMAKE.EXE ReBuildAll BUILD_ON_MAKER_MACHINE=1&#13;
&#13;
if %ERRORLEVEL% NEQ 0 exit &#13;
echo “Successful completion”&#13;
&#13;
&#13;
cd "%WORKSPACE%\Gen5\%CHIP_NAME%\Out&#13;
powershell Compress-Archive . Out.zip&#13;
cd "%WORKSPACE%\Gen5\%CHIP_NAME%\Misc&#13;
powershell Compress-Archive . Misc.zip</command>
        </hudson.tasks.BatchFile>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.contributed.ShellCondition" plugin="run-condition@1.3">
        <command>if [[ "${label}" == "dsp-centos-dynamic" ]] || [[ "${label}" == "dsp-centos8-slave" ]]
then
exit 0
else
exit 1
fi</command>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>compile_intel(){
cd ${WORKSPACE}/Gen5/Intel/$1
output_textfile_name=$(echo $1 | sed 's/\//_/g')
make clean
make all
}

cd ${WORKSPACE}
set -xe

echo "repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}"
repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}
echo "repo sync"
repo sync -j$(nproc) --force-sync

TARGET=`echo $GERRIT_REFSPEC | sed 's:refs/changes/../::; s:/:-:g'`
# get the module name
module=$(echo $Module_Project | awk -F '/' '{print $NF}')

if [[ "$module" != "NEU" ]]
then
	# cd to releant path
	cd Modules/${module}
	echo "git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC"
	git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC &amp;&amp; git checkout FETCH_HEAD

fi


#copy all modules to relevant path in Gen5 Modules directory
cd ${WORKSPACE}/Gen5
echo "sh copyModules.sh" ${CHIP_NAME}
sh copyModules.sh ${CHIP_NAME}

#*******************************************************************************************************************************
if [[ "$module" == "NEU" ]]
then
	artifactory_user=admin
	if [[ "$GERRIT_BRANCH" == "710" || "$GERRIT_BRANCH" == "723" ]]
    then
    	files_to_download=("neu_gmac_c.a64P" "pktutl_c.a64P" "util_a.a64P" "util_c.a64P")
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network/Lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network/Lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d' ' -f2 | cut -c 1-32)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
            curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
    if [[ "$GERRIT_BRANCH" == "722" ]]
    then
    	files_to_download=("neu_gmac_c.ae66" "pktutl_c.ae66" "util_a.ae66" "util_c.ae66")
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}" 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d' ' -f2 | cut -c 1-32)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
fi
#*******************************************************************************************************************************



echo "******************* change ${CHIP_NAME} makefile version number****************************"
OLDTAG=$(git describe --first-parent --tags | sed 's/\(.*\)-.*/\1/')
VERSION=$(echo ${OLDTAG} | cut -d'.' -f1)
SUBVERSION=$(echo ${OLDTAG} | cut -d'.' -f2)
RELEASE_DATE=$(date +"%Y%d%m")
RELEASE_DATE=$(expr $RELEASE_DATE + 0)
echo "update ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i "s/%RELEASE_DATE%/${RELEASE_DATE}/g" ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
echo "update ${CHIP_NAME}/SoftHost/Src/VersionInfo.h"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftHost/Src/VersionInfo.h
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftHost/Src/VersionInfo.h
sed -i "s/%RELEASE_DATE%/${RELEASE_DATE}/g" ${CHIP_NAME}/SoftHost/Src/VersionInfo.h
echo "update ${CHIP_NAME}/SoftDsp/communicator_64/makefile"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftDsp/communicator_64/makefile
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftDsp/communicator_64/makefile
echo "update ${CHIP_NAME}/SoftDsp/Hpi_64/makefile"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
echo "update ${CHIP_NAME}/SoftHost/communicator_64/makefile"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftHost/communicator_64/makefile
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftHost/communicator_64/makefile
echo "update ${CHIP_NAME}/SoftHost/Hpi_64/makefile"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftHost/Hpi_64/makefile
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftHost/Hpi_64/makefile
echo "*******************************************************************************************"




#run all 4 make in parallel (SoftDsp and SoftHost)
if [[ ${CHIP_NAME} == "Intel" ]]
then
	run_make=("SoftDsp/communicator_64" "SoftDsp/Hpi_64" "SoftHost/communicator_64" "SoftHost/Hpi_64")
	for path_to_run_make in ${run_make[@]}
	do
		compile_intel $path_to_run_make
	done
fi
wait
echo "Finish running make for SoftDsp and SoftHost"

if [[ "${label}" == "dsp-centos-dynamic" ]]
then
centos_ver=Centos7
elif [[ "${label}" == "dsp-centos8-slave" ]]
then
centos_ver=Centos8
fi
echo centos_ver=${centos_ver} &gt;&gt; generated_dsp.properties
echo TARGET=${TARGET} &gt;&gt; ${WORKSPACE}/generated_dsp.properties

echo "******************* Set ${CHIP_NAME} Extended Attributes  ***************************"
files_to_set_attributes=("${WORKSPACE}/Gen5/${CHIP_NAME}/SoftDsp/communicator_64/Soft*" "${WORKSPACE}/Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/Soft*" "${WORKSPACE}/Gen5/${CHIP_NAME}/SoftHost/communicator_64/Soft*" "${WORKSPACE}/Gen5/${CHIP_NAME}/SoftHost/Hpi_64/Soft*")
for file_to_set_attribue in ${files_to_set_attributes[@]}
do
	setfattr -n user.Version -v ${VERSION} ${file_to_set_attribue}
	setfattr -n user.SubVersion -v ${SUBVERSION}  ${file_to_set_attribue}
	setfattr -n user.Date -v ${RELEASE_DATE}  ${file_to_set_attribue}
	setfattr -n user.Revision -v 0 ${file_to_set_attribue}
done
echo "*******************************************************************************************"</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder plugin="conditional-buildstep@1.3.6">
      <condition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.3">
        <arg1>${label}</arg1>
        <arg2>dsp-grx-slave</arg2>
        <ignoreCase>false</ignoreCase>
      </condition>
      <buildStep class="hudson.tasks.Shell">
        <command>compile_grx(){
cd ${WORKSPACE}/Gen5/GRX/$1
output_textfile_name=$(echo $1 | sed 's/\//_/g')
make clean
make all
}
run_make=("SoftDsp/Hpi_64" "SoftHost/Hpi_64")

cd ${WORKSPACE}
set -xe

echo "repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}"
repo init -u ssh://jenkins@gerrit:29418/DSP/Gen5/repo_manifests -b ${GERRIT_BRANCH}
echo "repo sync"
repo sync -j$(nproc) --force-sync


TARGET=`echo $GERRIT_REFSPEC | sed 's:refs/changes/../::; s:/:-:g'`
# get the module name
module=$(echo $Module_Project | awk -F '/' '{print $NF}')


if [[ "$module" != "NEU" ]]
then
	# cd to releant path
	cd Modules/${module}
	echo "git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC"
	git fetch ssh://jenkins@gerrit:29418/DSP/Modules/${module} $GERRIT_REFSPEC &amp;&amp; git checkout FETCH_HEAD

fi


#copy all modules to relevant path in Gen5 Modules directory
cd ${WORKSPACE}/Gen5
echo "sh copyModules.sh" ${CHIP_NAME}
sh copyModules.sh ${CHIP_NAME}

#*******************************************************************************************************************************
if [[ "$module" == "NEU" ]]
then
	artifactory_user=admin
	if [[ "$GERRIT_BRANCH" == "710" || "$GERRIT_BRANCH" == "723" ]]
    then
    	files_to_download=("neu_gmac_c.a64P" "pktutl_c.a64P" "util_a.a64P" "util_c.a64P")
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network/Lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network/Lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d' ' -f2 | cut -c 1-32)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
            curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/700/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network_6486/lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
    if [[ "$GERRIT_BRANCH" == "722" ]]
    then
    	files_to_download=("neu_gmac_c.ae66" "pktutl_c.ae66" "util_a.ae66" "util_c.ae66")
        for file in ${files_to_download[@]}
    	do
    		curl -ku ${artifactory_user}:${artifactory_password} -X GET "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}" --output "${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}"
            local_md5=$(md5sum "${WORKSPACE}/Gen5/Modules/Network_66x/lib/${file}" | cut -d' ' -f1 | cut -d'\' -f2)
            remote_md5=$(curl -ku  ${artifactory_user}:${artifactory_password} -X GET -I "https://artifactory/dsp-review/com/ac/dsp/Gen5/NEU/${GERRIT_BRANCH}/${TARGET}/${file}" 2&gt;/dev/null | grep X-Checksum-Md5 | cut -d' ' -f2 | cut -c 1-32)
          	if [ "$local_md5" != "$remote_md5" ]; then
                echo local md5: $local_md5 and remote md5 $remote_md5  is different exit......
            	exit 1
          	fi
   	 	done
    fi
fi
#*******************************************************************************************************************************


echo "******************* change ${CHIP_NAME} makefile version number****************************"
OLDTAG=$(git describe --first-parent --tags | sed 's/\(.*\)-.*/\1/')
VERSION=$(echo ${OLDTAG} | cut -d'.' -f1)
SUBVERSION=$(echo ${OLDTAG} | cut -d'.' -f2)
RELEASE_DATE=$(date +"%Y%d%m")
RELEASE_DATE=$(expr $RELEASE_DATE + 0)
echo "update ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
sed -i "s/%RELEASE_DATE%/${RELEASE_DATE}/g" ${CHIP_NAME}/SoftDsp/Src/VersionInfo.h
echo "update ${CHIP_NAME}/SoftDsp/Hpi_64/makefile"
sed -i "s/%major%/${VERSION}/g" ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
sed -i "s/%minor%/${SUBVERSION}/g" ${CHIP_NAME}/SoftDsp/Hpi_64/makefile
echo "*******************************************************************************************"





sudo /dce/scripts/dce.sh -a chroot -e UGW7.2 -c "set -xe;cd ${WORKSPACE}/Gen5/GRX/SoftDsp/Hpi_64;make clean;chmod 775 fwhostpkg/*;chmod 775 make_file_grx;./make_file_grx"
if [[ $GERRIT_BRANCH == 723 || $GERRIT_BRANCH == 724 ]]
then
	GRX_SUBVERSION=$(echo ${SUBVERSION} | cut -d'-' -f1)
	sudo /dce/scripts/dce.sh -a chroot -e UGW7.2 -c "set -xe;cd ${WORKSPACE}/Gen5/GRX/SoftDsp/Hpi_64;chmod 775 GrxCreateVersion;ls -al;./GrxCreateVersion grx ac_fw_grx.fwb AC506012ae3.${VERSION}.${GRX_SUBVERSION} grxdsp fw_grx.map;rm -rf Soft*.bin Soft*.srec"
fi
echo TARGET=${TARGET} &gt;&gt; ${WORKSPACE}/generated_dsp.properties</command>
      </buildStep>
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
    </org.jenkinsci.plugins.conditionalbuildstep.singlestep.SingleConditionalBuilder>
    <EnvInjectBuilder plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>generated_dsp.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.19">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.2.5">
      <script>module=$(echo $Module_Project | awk -F '/' '{print $NF}')
echo "module=${module}"</script>
      <scriptType>unixScript</scriptType>
      <runOnlyOnParent>true</runOnlyOnParent>
      <hideEnvironmentVariablesValues>false</hideEnvironmentVariablesValues>
    </com.lookout.jenkins.EnvironmentScript>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec>{
    "files": [
        {
            "pattern": "Gen5/${CHIP_NAME}/Out/Out.zip",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/",
            "props": "type=zip;status=ready",
             "recursive": "false"
        },
        {
            "pattern": "Gen5/${CHIP_NAME}/Misc/Misc.zip",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Misc/",
            "props": "type=zip;status=ready",
             "recursive": "false"
        },
        {
            "pattern": "Gen5/${CHIP_NAME}/SoftDsp/communicator_64/Soft*",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/${centos_ver}/Out/",
             "recursive": "false"
        }, 
       {
            "pattern": "Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/Soft*",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/${centos_ver}/Out/",
             "recursive": "false"
        },
       {
            "pattern": "Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/*.fwb",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/",
             "recursive": "false"
        },
        {
            "pattern": "Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/AC506012ae3*",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/",
             "recursive": "false"
        },
        {
            "pattern": "Gen5/${CHIP_NAME}/SoftDsp/Hpi_64/fw*.map",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/",
             "recursive": "false"
        },
        {
            "pattern": "Gen5/${CHIP_NAME}/SoftHost/communicator_64/Soft*",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/${centos_ver}/Out/",
             "recursive": "false"
        }, 
       {
            "pattern": "Gen5/${CHIP_NAME}/SoftHost/Hpi_64/Soft*",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/${centos_ver}/Out/",
             "recursive": "false"
        },
        {
            "pattern": "Gen5/${CHIP_NAME}/GpuMaster/communicator_64/GpuMaster*",
            "target": "dsp-review/com/ac/dsp/Gen5/${GERRIT_BRANCH}/${TARGET}/${CHIP_NAME}/Out/",
             "recursive": "false"
        }
    ]
}</spec>
      </uploadSpec>
      <downloadSpec>
        <spec/>
      </downloadSpec>
      <deployPattern/>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <artifactoryCombinationFilter>(label == 'dsp-win-dynamic' || label == 'dsp-centos-dynamic' || label == 'dsp-grx-slave' || label == 'dsp-centos8-slave' )</artifactoryCombinationFilter>
      <multiConfProject>true</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jpass</name>
          <value>{AQAAABAAAAAQXE33New0y0o/0ChYBDNqb2U4iLYw1MB/TBcPh10LRxI=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>artifactory_password</name>
          <value>{AQAAABAAAAAQTt8JWIAywZYc+LAouCyjb0x3ajj8eKm1obYgLMoc53U=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}_Module:${module}_Branch:${GERRIT_BRANCH}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
  <childCustomWorkspace>Gen5</childCustomWorkspace>
</matrix-project>