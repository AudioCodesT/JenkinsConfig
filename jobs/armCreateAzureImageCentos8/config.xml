<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description/>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>azure_arm_slave</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.plugins.powershell.PowerShell plugin="powershell@1.3">
      <command>$TAG="$env:TAG"
$connection_string="$env:connection_string"
$NEW_TAG_WithoutDots=$TAG -replace "[.]",""
$Configurator_VmName="ArmConf${TAG}"
$Router_VmName="ArmRouter${TAG}"
$jenkins_secret_key=$env:jenkins_secret_key
$jenkins_app_id="45249771-dc40-4782-b712-6a16c8af251c"
$jenkins_tenant_id="1911c65c-893b-42f9-83fa-66c1b86fdf85"
$admin_username="acarm"
$container_name="arm${NEW_TAG_WithoutDots}"
$VmSize="Standard_A2_v2"
$vhd_storage_account="ciresourcegroupstorage"
$subnet="Net_172.16.100.0"
$vnet_name="CI_Resource_Group"
$security_group="createOvocImageSG"
$Configurator_vhd_name="ARM-Conf_${TAG}"
$Router_vhd_name="ARM-Router_${TAG}"
$ResourceGroupName="CI_Resource_Group"
$conf_base_image="https://${vhd_storage_account}.blob.core.windows.net/${container_name}/${Configurator_vhd_name}.vhd"
$router_base_image="https://${vhd_storage_account}.blob.core.windows.net/${container_name}/${Router_vhd_name}.vhd"

$ErrorActionPreference = "Stop"

Write-Output "Unzip VHD FILES"
37	
Expand-Archive -Path "$env:WORKSPACE\${Configurator_vhd_name}.zip" -destinationPath "$env:WORKSPACE"
38	
Expand-Archive -Path "$env:WORKSPACE\${Router_vhd_name}.zip" -destinationPath "D:\"


Write-Output "login to az and azcopy"
az login --service-principal -u ${jenkins_app_id} -p ${jenkins_secret_key} --tenant ${jenkins_tenant_id}
$env:AZCOPY_SPA_CLIENT_SECRET="${jenkins_secret_key}"
azcopy login --service-principal --application-id=${jenkins_app_id} --tenant-id=${jenkins_tenant_id}


#set az account subscription  as development env
$devops_subscription_id="039c0ed7-885b-425d-8129-6a05eaa601fa"
az account list --all --refresh
az account set --subscription "${devops_subscription_id}"
az account show

Write-Output "Create a new container"
az storage container create  --connection-string ${connection_string} --name ${container_name}


Write-Output "copy to azure storage"
azcopy copy "$env:WORKSPACE\${Configurator_vhd_name}.vhd" "https://${vhd_storage_account}.blob.core.windows.net/${container_name}/${Configurator_vhd_name}.vhd" --blob-type "pageblob" --overwrite "true"
azcopy copy "D:\${Router_vhd_name}.vhd" "https://${vhd_storage_account}.blob.core.windows.net/${container_name}/${Router_vhd_name}.vhd" --blob-type "pageblob" --overwrite "true"

Write-Output "create managed disk"
$conf_disk_id=(az disk create --resource-group ${ResourceGroupName} --name ${Configurator_vhd_name} --source ${conf_base_image} --query 'id' -o json)
$router_disk_id=$(az disk create --resource-group ${ResourceGroupName} --name ${Router_vhd_name} --source ${router_base_image} --query 'id' -o json)

Write-Output "Create Image from managed disk"
az image create --resource-group ${ResourceGroupName} --name $Configurator_vhd_name --source ${conf_disk_id} --os-type Linux
az image create --resource-group ${ResourceGroupName} --name ${Router_vhd_name} --source ${router_disk_id} --os-type Linux


Write-Output "Create SAS URL"
$start_date=(get-date).AddDays(-1).ToString("yyyy-MM-ddThh:mm:ssZ")
$expire_date=(get-date).AddDays(+60).ToString("yyyy-MM-ddThh:mm:ssZ")
$CONF_URL=$(az storage blob url --connection-string ${connection_string} -c ${container_name} -n "${Configurator_vhd_name}.vhd" -o tsv)
$ROUTER_URL=$(az storage blob url --connection-string ${connection_string} -c ${container_name} -n "${Router_vhd_name}.vhd" -o tsv)
$SAS_URL=$(az storage container generate-sas --connection-string ${connection_string} --name ${container_name} --permissions rl --start "${start_date}" --expiry "${expire_date}" -o tsv)
$conf_download_URL="${CONF_URL}?${SAS_URL}"
$router_download_URL="${ROUTER_URL}?${SAS_URL}"


Write-Output "Output Download SAS URL to file"
"conf_download_URL=$conf_download_URL" | Out-File prop_sas -Encoding ascii
"router_download_URL=$router_download_URL" | Out-File -append prop_sas -Encoding ascii
</command>
    </hudson.plugins.powershell.PowerShell>
    <EnvInjectBuilder plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>prop_sas </propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>ben.magriso</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
      <recipientList>Lina.Fine@audiocodes.com,Moshe.Ben-Eliezer@audiocodes.com,Liav.Elias@audiocodes.com,Pavel.Smolyar@audiocodes.com,cc:Shuky.Riechard@audiocodes.com,cc:ben.magriso@audiocodes.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
      <defaultSubject>ARM ${TAG} image for azure is ready</defaultSubject>
      <defaultContent>ARM-Configurator_${TAG} vhd file can be downloaded here: 
${conf_download_URL}
&lt;br&gt;
&lt;br&gt;
ARM-Router_${TAG} vhd file can be downloaded here: 
${router_download_URL}</defaultContent>
      <attachmentsPattern/>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.3"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.6.3">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.6.1">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec/>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    "files": [
        {
            "pattern": "libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Conf_${TAG}/ARM-Conf_${TAG}*.zip",
            "target": "${workspace}/",
            "flat": "true"
        },
        {
            "pattern": "libs-release-local/com/ac/arm/VHD/${TAG}/ARM-Router_${TAG}/ARM-Router_${TAG}*.zip",
            "target": "${workspace}/",
            "flat": "true"
        },
        {
            "pattern": "Devops/Tools/Azure/arm/CentOS8/*.py",
            "target": "${workspace}/",
            "flat": "true"
        }
    ]
}</spec>
      </downloadSpec>
      <deployPattern/>
      <resolvePattern/>
      <deploymentProperties/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectPasswordWrapper plugin="envinject@2.3.0">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jenkins_secret_key</name>
          <value>{AQAAABAAAAAw18TKRYDosE9iNcay6EJX0ulRJpPW0MFtwQiPJjSv585SNYm6u3apPTnmivn9r6mygG3e/hTM639sj4gNaxmyVg==}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>admin_password</name>
          <value>{AQAAABAAAAAQ22eJl0mNYrv4NDBB0GzCjAmeL9i4ErqPur53+YnRU5M=}</value>
        </EnvInjectPasswordEntry>
        <EnvInjectPasswordEntry>
          <name>connection_string</name>
          <value>{AQAAABAAAADQAtLmAutMwCxtLf8G0wXN8MbGRmyPH7wHHEnvZA6QihCyeLLtPoEiVPa2Mqc+g65+rut4lcwKZPk3SljUrGdmyhU87gJheWpbeCxvpnHd8GhGrZ2nhppNcbTvmj7KUnkE+iJeLBltQ4Ekts+gKWQF2QUDO7ghBMvnNEFCYfh+FlEH2nYYkSJi5PHmkRuEXB4FBsOcQBmgCq/E+u6tdFnRsnKvWdoCg1y2vKsrr2IbanjBQmJtYgf0tr0tavDhTiW5j9hB7WyPwUSROdYI5bJHExbpaZ8TYt1YHtpTnXc3T/o=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}__${TAG}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>