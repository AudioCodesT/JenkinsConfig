<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.13">
      <siteName>http://acjira:8080/</siteName>
    </hudson.plugins.jira.JiraProjectProperty>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs/>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>TAG</name>
          <description>Version number of the ARM AMI that was already created</description>
          <defaultValue/>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit/>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@2.3.0">
      <info>
        <propertiesContent>PATH=$PATH:/home/centos/.local/bin:/home/centos/bin:/usr/local/git/bin</propertiesContent>
        <secureGroovyScript plugin="script-security@1.71">
          <script/>
          <sandbox>false</sandbox>
        </secureGroovyScript>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
    </EnvInjectJobProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>arm-build</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>printf "%-30s%10sami-id\n" "Region" " " &gt; ConfRegionsNameAndIds.txt
printf "%-30s%10sami-id\n" "Region" " " &gt; RouterRegionsNameAndIds.txt
printf "%s------------------------------------------------------------\n" &gt;&gt; ConfRegionsNameAndIds.txt
printf "%s------------------------------------------------------------\n" &gt;&gt; RouterRegionsNameAndIds.txt
#list of other regions
OTHER_REGIONS="eu-west-1 eu-west-2 us-east-1 us-east-2 us-west-1 us-west-2 ap-southeast-1"
OTHER_REGIONS=($OTHER_REGIONS) 
currentRegion="eu-central-1"
ConfImageName="AudioCodes ARM Configurator ${TAG}"
RouterImageName="AudioCodes ARM Router ${TAG}"

BRANCH=${TAG:0:3}
echo "BRANCH=${BRANCH}" &gt; prop

#Get Image Id
ConfImageId=$(aws ec2 describe-images --filters Name=tag:Name,Values=$ConfImageName --output text --query 'Images[*].ImageId')
RouterImageId=$(aws ec2 describe-images --filters Name=tag:Name,Values=$RouterImageName --output text --query 'Images[*].ImageId')


printf "%-30s%-10s${ConfImageId}\n" "${currentRegion}" " " &gt;&gt; ConfRegionsNameAndIds.txt
printf "%-30s%-10s${RouterImageId}\n" "${currentRegion}" " " &gt;&gt; RouterRegionsNameAndIds.txt


#make The Image Public
aws ec2 modify-image-attribute --image-id ${ConfImageId} --launch-permission "{\"Add\":[{\"Group\":\"all\"}]}"
aws ec2 modify-image-attribute --image-id ${RouterImageId} --launch-permission "{\"Add\":[{\"Group\":\"all\"}]}"

#copy Image to other Regions
for destRegionName in ${OTHER_REGIONS[@]}
do
		#copy both AMI to the new region
    	ConfNewRegionAmiId=$(aws ec2 copy-image --region ${destRegionName} --name "ARM-Configurator_${TAG}" --description "ARM AMI ${TAG}" --source-image-id ${ConfImageId} --source-region ${currentRegion} --output text --query "ImageId")
        RouterNewRegionAmiId=$(aws ec2 copy-image --region ${destRegionName} --name "ARM-Router_${TAG}" --description "ARM AMI ${TAG}" --source-image-id ${RouterImageId} --source-region ${currentRegion} --output text --query "ImageId")
        sleep 20
        #wait for The image to Create
        OLD_STATE=""
        while true; do
            sleep 100
            CONF_STATE=$(aws ec2 describe-images --region ${destRegionName} --image-ids ${ConfNewRegionAmiId} --output text --query "Images[0].State")
            ROUTER_STATE=$(aws ec2 describe-images --region ${destRegionName} --image-ids ${RouterNewRegionAmiId} --output text --query "Images[0].State")
            if [[ $CONF_STATE != $CONF_OLD_STATE ]]
            then
                echo $CONF_STATE
                CONF_OLD_STATE=$CONF_STATE
            fi
            if [[ $ROUTER_STATE != $ROUTER_OLD_STATE ]]
            then
                echo $ROUTER_STATE
                ROUTER_OLD_STATE=$ROUTER_STATE
            fi
            if [[ $CONF_STATE == "available" ]] &amp;&amp; [[ $ROUTER_STATE == "available" ]]
            then
                break
            fi
        done
        sleep 30
        #get Snapshot id    
        conf_snapshotId=$(aws ec2 describe-images --region ${destRegionName} --image-ids ${ConfNewRegionAmiId} --output text --query Images[*].BlockDeviceMappings[*].Ebs.SnapshotId)
        router_snapshotId=$(aws ec2 describe-images --region ${destRegionName} --image-ids ${RouterNewRegionAmiId} --output text --query Images[*].BlockDeviceMappings[*].Ebs.SnapshotId)
        #give name to the snapshot -
        aws ec2 create-tags --region ${destRegionName} --resources $conf_snapshotId --tags Key=Name,Value="ARM-Configurator_${TAG}"
        aws ec2 create-tags --region ${destRegionName} --resources $router_snapshotId --tags Key=Name,Value="ARM-Router_${TAG}"
        # add public permissions to the rest of the regions
        aws ec2 modify-image-attribute --region ${destRegionName} --image-id ${ConfNewRegionAmiId} --launch-permission "{\"Add\":[{\"Group\":\"all\"}]}"
        aws ec2 modify-image-attribute --region ${destRegionName} --image-id ${RouterNewRegionAmiId} --launch-permission "{\"Add\":[{\"Group\":\"all\"}]}"
    	
        printf "%-30s%-10s${ConfNewRegionAmiId}\n" "${destRegionName}" " " &gt;&gt; ConfRegionsNameAndIds.txt
        printf "%-30s%-10s${RouterNewRegionAmiId}\n" "${destRegionName}" " " &gt;&gt; RouterRegionsNameAndIds.txt
done</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.3.0">
      <info>
        <propertiesFilePath>prop</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>ConfRegionsNameAndIds.txt,RouterRegionsNameAndIds.txt</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher plugin="flexible-publish@0.15.2">
      <publishers>
        <org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
          <condition class="org.jenkins_ci.plugins.run_condition.core.AlwaysRun" plugin="run-condition@1.3"/>
          <publisherList>
            <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
              <recipientList>ben.magriso@audiocodes.com,Shuky.Riechard@audiocodes.com</recipientList>
              <configuredTriggers>
                <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
                  <email>
                    <subject>$PROJECT_DEFAULT_SUBJECT</subject>
                    <body>$PROJECT_DEFAULT_CONTENT</body>
                    <recipientProviders>
                      <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
                    </recipientProviders>
                    <attachmentsPattern/>
                    <attachBuildLog>false</attachBuildLog>
                    <compressBuildLog>false</compressBuildLog>
                    <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
                    <contentType>project</contentType>
                  </email>
                </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
              </configuredTriggers>
              <contentType>text/html</contentType>
              <defaultSubject>ARM version ${TAG} is released</defaultSubject>
              <defaultContent>edit &lt;a href="https://jenkins/view/admin/job/aws_deleteArmAmi/"&gt;aws_deleteArmAmi&lt;/a&gt; jenkins job to not delete AMIs in version ${TAG}

send by ${BUILD_URL}</defaultContent>
              <attachmentsPattern/>
              <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
              <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
              <attachBuildLog>false</attachBuildLog>
              <compressBuildLog>false</compressBuildLog>
              <replyTo>$DEFAULT_REPLYTO</replyTo>
              <from/>
              <saveOutput>false</saveOutput>
              <disabled>false</disabled>
            </hudson.plugins.emailext.ExtendedEmailPublisher>
          </publisherList>
          <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.3"/>
          <executionStrategy class="org.jenkins_ci.plugins.flexible_publish.strategy.FailAtEndExecutionStrategy"/>
        </org.jenkins__ci.plugins.flexible__publish.ConditionalPublisher>
      </publishers>
    </org.jenkins__ci.plugins.flexible__publish.FlexiblePublisher>
    <hudson.tasks.Mailer plugin="mailer@1.32">
      <recipients>ben.magriso</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.69">
      <recipientList>Lina.Fine@audiocodes.com, Moshe.Ben-Eliezer@audiocodes.com, Pavel.Smolyar@audiocodes.com,
cc:Ben.Magriso@audiocodes.com, cc:Shuky.Riechard@audiocodes.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
      <defaultSubject>ARM ${TAG} : Router and Configurator AMIs were published successfully</defaultSubject>
      <defaultContent>ARM Configurator AMIs
&lt;pre&gt;
${FILE,path="ConfRegionsNameAndIds.txt"}
&lt;/pre&gt;

ARM Router AMIs
&lt;pre&gt;
${FILE,path="RouterRegionsNameAndIds.txt"}
&lt;/pre&gt;</defaultContent>
      <attachmentsPattern/>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.38">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter/>
      <externalDelete/>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@2.1.0">
      <template>#${BUILD_NUMBER}__${TAG}</template>
      <descriptionTemplate/>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>