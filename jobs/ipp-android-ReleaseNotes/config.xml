<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Create &quot;ReleaseNote.txt&quot;</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_REFNAME</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>GERRIT_PROJECT</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.9.3">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/repo_manifests</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${GERRIT_REFNAME}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
    </extensions>
  </scm>
  <assignedNode>ipp-android-dynamic</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger plugin="gerrit-trigger@2.27.5">
      <spec></spec>
      <gerritProjects>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
          <compareType>PLAIN</compareType>
          <pattern>IPP/Android/repo_manifests</pattern>
          <branches>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>refs/tags/1.*</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
            <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
              <compareType>ANT</compareType>
              <pattern>refs/tags/C450HD_TEAMS_0.*</pattern>
            </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.Branch>
          </branches>
          <disableStrictForbiddenFileVerification>false</disableStrictForbiddenFileVerification>
        </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.data.GerritProject>
      </gerritProjects>
      <dynamicGerritProjects class="empty-list"/>
      <skipVote>
        <onSuccessful>false</onSuccessful>
        <onFailed>false</onFailed>
        <onUnstable>false</onUnstable>
        <onNotBuilt>false</onNotBuilt>
      </skipVote>
      <silentMode>false</silentMode>
      <notificationLevel></notificationLevel>
      <silentStartMode>false</silentStartMode>
      <escapeQuotes>true</escapeQuotes>
      <nameAndEmailParameterMode>PLAIN</nameAndEmailParameterMode>
      <dependencyJobsNames></dependencyJobsNames>
      <commitMessageParameterMode>BASE64</commitMessageParameterMode>
      <changeSubjectParameterMode>PLAIN</changeSubjectParameterMode>
      <commentTextParameterMode>BASE64</commentTextParameterMode>
      <buildStartMessage></buildStartMessage>
      <buildFailureMessage></buildFailureMessage>
      <buildSuccessfulMessage></buildSuccessfulMessage>
      <buildUnstableMessage></buildUnstableMessage>
      <buildNotBuiltMessage></buildNotBuiltMessage>
      <buildUnsuccessfulFilepath></buildUnsuccessfulFilepath>
      <customUrl></customUrl>
      <serverName>gerritHost</serverName>
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginRefUpdatedEvent/>
      </triggerOnEvents>
      <dynamicTriggerConfiguration>false</dynamicTriggerConfiguration>
      <triggerConfigURL></triggerConfigURL>
      <triggerInformationAction/>
    </com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash +e -x

NEWTAG=`echo $GERRIT_REFNAME | awk -F/ &apos;{print $NF}&apos;`
echo NEWTAG=${NEWTAG} &gt; generated_ipp_version.properties

PreviousTAG=`git describe --first-parent --tags --abbrev=0 HEAD^`

git log --first-parent --pretty=format:&quot;%B&quot; $PreviousTAG..$NEWTAG &gt; $NEWTAG.txt
cp -f $NEWTAG.txt releaseNotes.txt
AuthorCommitter=$(grep User: $NEWTAG.txt | sed &apos;s/.*User: //&apos; | sort -u )
 
if [ -z &quot;$AuthorCommitter&quot; ]; then AuthorCommitter=`git log --first-parent --pretty=format:&quot;%aN%n%cN&quot; $PreviousTAG..$NEWTAG | sort -u | sed s/$/\;/g`; fi

RN=&quot;&quot;
orgHash=&quot;&quot;
IFS=&apos;&apos;
while read -r line; do
    if [ ! -z &quot;$orgHash&quot; ]; then
      if [[ ! -z $Jira &amp;&amp; ! -z $subject ]]; then
        subject=$(echo $subject | sed &apos;s/Change-Id:.*(/(/&apos;)
        RN+=---$subject::$orgHash::$Jira
        echo $RN
        orgHash=&quot;&quot;;
      else
        # Find the Jira issue and don&apos;t override it in others lines without it.
        if  [ -z $Jira ]; then
          Jira=$(echo $line | grep &quot;\[IPP&quot; | sed &apos;s/.*\[IPP/IPP/; s/\].*//&apos;)
        fi
        # Take the subject line only
        if  [ -z $subject ]; then
          subject=&quot;$(echo $line | sed &apos;s/\&quot;/`/g; s/---/_/g; s/::/;/g&apos;)&quot;
        fi
      fi
    fi
    if echo $line | grep -q &quot;\-\-Hash:&quot;; then
      orgHash=$(echo $line | cut -d: -f2);
      SaveOneHash=$orgHash
      subject=&quot;&quot;
      Jira=&quot;&quot;
    fi
done &lt; $NEWTAG.txt

if [ -z &quot;$RN&quot; ]; then
  while read -r hash; do 
    subject=$(git log --pretty=format:&quot;%s&quot; $hash -n1 | sed &apos;s/\&quot;/`/g; s/---/_/g; s/::/;/g&apos;)
    Jira=$(git log --pretty=format:&quot;%B&quot; $hash -n1 | grep &quot;\[I&quot; | sed &apos;s/.*\[I/I/; s/\].*//&apos;)
    RN+=---$subject::$hash::$Jira
  done &lt;&lt;&lt; &quot;$(git log --first-parent --reverse --pretty=format:&quot;%h&quot; $PreviousTAG..$NEWTAG)&quot;
fi

echo Find the author email in Gerrit server according the commit SHA1 
EMAIL=$(ssh -p 29418 jenkins@gerrit gerrit query $SaveOneHash | grep email | sed &apos;s/.*email: //&apos;)
if [ -z &quot;$EMAIL&quot; ]; then EMAIL=`git log --pretty=format:&quot;%ae%n%ce&quot; $PreviousTAG..$NEWTAG | grep -v devops | sort -u`; fi
if [ -z &quot;$EMAIL&quot; ]; then EMAIL=&quot;IppSwReleases@audiocodes.com&quot;; fi

GERRIT_PROJECT=`echo $GIT_URL | cut -d/ -f4,5`
DATE=`git for-each-ref --format &apos;%(taggerdate)&apos; refs/tags/$NEWTAG`
#GERRIT_BRANCH=`git branch --no-color -r --contains HEAD | grep -v -e &apos;-&gt;&apos; | head -1 | awk -F&apos;/&apos; &apos;{print $NF}&apos;`
GERRIT_BRANCH=$(git branch --no-color -r --contains HEAD | grep -v -e &apos;-&gt;&apos; | sed &apos;s:.*origin/::&apos;)

echo RN=${RN} &gt;&gt; generated_ipp_version.properties
echo GERRIT_HOST=$(echo $GIT_URL | cut -d@ -f2 | cut -d: -f1) &gt;&gt; generated_ipp_version.properties
echo EMAIL=${EMAIL} &gt;&gt; generated_ipp_version.properties
echo PROJECT=${GERRIT_PROJECT} &gt;&gt; generated_ipp_version.properties
echo DATE=${DATE} &gt;&gt; generated_ipp_version.properties
echo GERRIT_BRANCH=${GERRIT_BRANCH} &gt;&gt; generated_ipp_version.properties
echo AuthorCommitter=${AuthorCommitter} &gt;&gt; generated_ipp_version.properties

</command>
    </hudson.tasks.Shell>
    <EnvInjectBuilder plugin="envinject@2.1.5">
      <info>
        <propertiesFilePath>generated_ipp_version.properties</propertiesFilePath>
      </info>
    </EnvInjectBuilder>
    <org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration plugin="Parameterized-Remote-Trigger@2.2.2">
      <token>Jira-update</token>
      <remoteJenkinsName>test-jenkins</remoteJenkinsName>
      <job>Update-Jira</job>
      <shouldNotFailBuild>true</shouldNotFailBuild>
      <pollInterval>3</pollInterval>
      <connectionRetryLimit>5</connectionRetryLimit>
      <preventRemoteBuildQueue>false</preventRemoteBuildQueue>
      <blockBuildUntilComplete>false</blockBuildUntilComplete>
      <enhancedLogging>false</enhancedLogging>
      <parameters>NEWTAG=$NEWTAG
RN=$RN
GERRIT_HOST=$GERRIT_HOST
EMAIL=$EMAIL
PROJECT=$PROJECT
DATE=$DATE
GERRIT_BRANCH=$GERRIT_BRANCH
AuthorCommitter=$AuthorCommitter</parameters>
      <parameterList>
        <string>NEWTAG=$NEWTAG</string>
        <string>RN=$RN</string>
        <string>GERRIT_HOST=$GERRIT_HOST</string>
        <string>EMAIL=$EMAIL</string>
        <string>PROJECT=$PROJECT</string>
        <string>DATE=$DATE</string>
        <string>GERRIT_BRANCH=$GERRIT_BRANCH</string>
        <string>AuthorCommitter=$AuthorCommitter</string>
      </parameterList>
      <overrideAuth>false</overrideAuth>
      <auth>
        <org.jenkinsci.plugins.ParameterizedRemoteTrigger.Auth>
          <NONE>none</NONE>
          <API__TOKEN>apiToken</API__TOKEN>
          <CREDENTIALS__PLUGIN>credentialsPlugin</CREDENTIALS__PLUGIN>
        </org.jenkinsci.plugins.ParameterizedRemoteTrigger.Auth>
      </auth>
      <loadParamsFromFile>false</loadParamsFromFile>
      <parameterFile></parameterFile>
      <queryString></queryString>
    </org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration>
  </builders>
  <publishers>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>NEWTAG=${NEWTAG}
BUILD_BRANCH=${GERRIT_BRANCH}
</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>ipp-android-Build</projects>
          <condition>UNSTABLE_OR_BETTER</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@3.1.0">
      <deployerDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <deployReleaseRepository>
          <keyFromText></keyFromText>
          <keyFromSelect>ipp-release</keyFromSelect>
          <dynamicMode>false</dynamicMode>
        </deployReleaseRepository>
        <stagingPlugin/>
      </deployerDetails>
      <resolverDetails>
        <artifactoryName>797876730@1453721585664</artifactoryName>
        <artifactoryUrl>https://artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>false</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec></spec>
      </downloadSpec>
      <deployPattern>${WORKSPACE}/releaseNotes.txt=&gt;com/ac/ipp/Android/${GERRIT_BRANCH}/${NEWTAG}</deployPattern>
      <resolvePattern></resolvePattern>
      <deploymentProperties></deploymentProperties>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER}___${NEWTAG}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>