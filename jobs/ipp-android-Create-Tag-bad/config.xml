<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job check every 10 minutes the Repository and create a new TAG by incrementing the last TAG in IPP/Android/repo_manifests</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>20</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.8.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>dvf101-kernel</name>
        <refspec>+refs/heads/*:refs/remotes/dvf101-kernel/* +refs/tags/*:refs/tags/dvf101-kernel/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/device_dspg_dvf101-kernel</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>dvf101</name>
        <refspec>+refs/heads/*:refs/remotes/dvf101/* +refs/tags/*:refs/tags/dvf101/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/device_dspg_dvf101</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>tinyalsa</name>
        <refspec>+refs/heads/*:refs/remotes/tinyalsa/* +refs/tags/*:refs/tags/tinyalsa/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/external_tinyalsa</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>packagesSettings</name>
        <refspec>+refs/heads/*:refs/remotes/packagesSettings/* +refs/tags/*:refs/tags/packagesSettings/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/packages_apps_Settings</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>packagesMSPartner</name>
        <refspec>+refs/heads/*:refs/remotes/packagesMSPartner/* +refs/tags/*:refs/tags/packagesMSPartner/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/packages_services_MSPartner</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>frameworksBase</name>
        <refspec>+refs/heads/*:refs/remotes/frameworksBase/* +refs/tags/*:refs/tags/frameworksBase/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/frameworks_base</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>platformBuild</name>
        <refspec>+refs/heads/*:refs/remotes/platformBuild/* +refs/tags/*:refs/tags/platformBuild/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/platform_build</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>frameworksAV</name>
        <refspec>+refs/heads/*:refs/remotes/frameworksAV/* +refs/tags/*:refs/tags/frameworksAV/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/frameworks_av</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>frameworksNative</name>
        <refspec>+refs/heads/*:refs/remotes/frameworksNative/* +refs/tags/*:refs/tags/frameworksNative/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/frameworks_native</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>frameworksEthernet</name>
        <refspec>+refs/heads/*:refs/remotes/frameworksEthernet/* +refs/tags/*:refs/tags/frameworksEthernet/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/frameworks_opt_net_ethernet</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>platformNetd</name>
        <refspec>+refs/heads/*:refs/remotes/platformNetd/* +refs/tags/*:refs/tags/platformNetd/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/platform_system_netd</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>systemCertificates</name>
        <refspec>+refs/heads/*:refs/remotes/systemCertificates/* +refs/tags/*:refs/tags/systemCertificates/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/system_ca_certificates</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
      <hudson.plugins.git.UserRemoteConfig>
        <name>systemEngine</name>
        <refspec>+refs/heads/*:refs/remotes/systemEngine/* +refs/tags/*:refs/tags/systemEngine/*</refspec>
        <url>ssh://jenkins@gerrit:29418/IPP/Android/system_update_engine</url>
        <credentialsId>df9bd014-71c4-4f0e-8177-456e451a86c0</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.BuildChooserSetting>
        <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
      </hudson.plugins.git.extensions.impl.BuildChooserSetting>
    </extensions>
  </scm>
  <assignedNode>ipp-android</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/10 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>git config --global user.name &quot;Jenkins&quot;
git config --global user.email devops@audiocodes.com
echo Starting...
git status
git remote -v
subject=&quot;&quot;

git checkout dvf101/master

createTag() {
  if git log --pretty=format:%B -n1 $LastSha1 | grep -q &quot;DevOps admin change&quot;; then
    echo Do not create a TAG for DevOps commits
    return
  fi
  echo Add one to the last TAG
  NEWTAG=`echo $LastManifestTag | sed -r &apos;s/(.*)\.[^\d]+$/\1/&apos;`.`echo $LastManifestTag | awk -F. &apos;{print $NF+1}&apos;`

  echo Create new TAG $NEWTAG 
  git tag -a -m &quot;Jenkins auto tag after $LastUser commit&quot; $NEWTAG $LastSha1
  git push $localRepoName $NEWTAG
  fullSha1=$(git rev-parse $LastSha1)
  
  (
  echo Update default.xml file, create a new Commit and create this TAG in repo_manifests too
  cd ../repo_manifests
  echo Find $repoName in default.xml and replace the revision to be the new TAG
  sed -i.bak -e &quot;s:\(.*$repoName\&quot;.* revision=\).*\( .*\):\1\&quot;refs/tags/$NEWTAG\&quot;\2:&quot; default.xml
  rm -f default.xml.bak
  echo Set to user $LastUser
  git add default.xml
  git config --global user.name &quot;$LastUser&quot;
  git commit -m &quot;Change in: $repoName, User: $LastUser&quot; -m &quot;$subject&quot; -m &quot;Promote tag to $NEWTAG&quot;
  git tag -a -m &quot;Jenkins auto tag for $repoName by $LastUser&quot; $NEWTAG
  manifestBranch=$(git branch -a | grep &quot;origin.*$BRANCH&quot; | tail -1 | sed &apos;s:.*origin/::&apos;)
  git push origin HEAD:$manifestBranch
  git push origin $NEWTAG
  )
  LastManifestTag=$NEWTAG
}

for BRANCH in master
do
  # Find remote repository name
  remote=$(git branch -a --contains HEAD | grep remotes | head -1)
  localRepoName=$(echo $remote | cut -d/ -f2)
  GERRIT_BRANCH=$(echo $remote | cut -d/ -f2-)
  # Find real repository name - to find the line in default.xml 
  repoName=$(git remote -v | grep push | grep &quot;^$localRepoName\s&quot; | sed &apos;s:.*29418/\(.*\) .*:\1:&apos;)

  echo Check branch $GERRIT_BRANCH if exist a new commit after the last TAG...
  if ! git describe --tags --first-parent $GERRIT_BRANCH | grep -q -; then exit 0; fi
  git checkout $GERRIT_BRANCH
  echo Find the last TAG name...
  LastTag=$(git describe --tags --abbrev=0 --first-parent $GERRIT_BRANCH)
  
  echo Create &apos;repo_manifests&apos; and find the last TAG 
  cd ..
  if [ ! -d repo_manifests ]; then
    git clone ssh://jenkins@gerrit:29418/IPP/Android/repo_manifests
  fi
  cd repo_manifests
  # Create a local branch and checkout to 
  if ! git branch | grep -q $BRANCH; then git checkout -f -b $BRANCH `git branch -a | grep remotes/origin/$BRANCH`; fi
  git reset --hard
  git pull --rebase
  LastManifestTag=`git describe --tags --abbrev=0 --first-parent`
  cd $WORKSPACE

  echo Check $LastTag..$GERRIT_BRANCH
  git log --first-parent --reverse --date=raw --pretty=format:&quot;%H_%cn_%cd&quot; $LastTag..$GERRIT_BRANCH &gt; CommitChangesList
  echo &gt;&gt; CommitChangesList
  LastUser=&quot;&quot;
  while IFS=_ read -r Sha1 User When
  do
    if [ &quot;$LastUser&quot; != &quot;&quot; ] &amp;&amp; [ &quot;$LastUser&quot; != &quot;$User&quot; ]; then createTag; subject=&quot;&quot;; fi
    LastUser=$User
    LastSha1=$Sha1
    subject=&quot;$subject$(git log --pretty=format:&quot;--Hash:%h %n%s%n%b %n&quot; $LastSha1 -n1)&quot;
    LastWhen=`echo $When | cut -d&quot; &quot; -f1`
  done &lt; CommitChangesList

  if [ -z $LastWhen ]; then continue; fi

  echo Check the last commit if 5 minutes passed...
  CurrentTime=`date +%s`
  if [ `expr $CurrentTime - $LastWhen` -gt 300 ]; then
    createTag
  else
    echo Try again later after 300 seconds
    exit 2
  fi
done

</command>
      <unstableReturn>2</unstableReturn>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.62">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.StillFailingTrigger>
          <email>
            <recipientList>yossim,Shuky.Riechard</recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders/>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.StillFailingTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript></postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from></from>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <com.chikli.hudson.plugin.naginator.NaginatorPublisher plugin="naginator@1.17.2">
      <regexpForRerun>Try again later after 300 seconds</regexpForRerun>
      <rerunIfUnstable>true</rerunIfUnstable>
      <rerunMatrixPart>false</rerunMatrixPart>
      <checkRegexp>true</checkRegexp>
      <regexpForMatrixStrategy>TestParent</regexpForMatrixStrategy>
      <delay class="com.chikli.hudson.plugin.naginator.FixedDelay">
        <delay>300</delay>
      </delay>
      <maxSchedule>4</maxSchedule>
    </com.chikli.hudson.plugin.naginator.NaginatorPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <patterns>
        <hudson.plugins.ws__cleanup.Pattern>
          <pattern>.git/index.lock</pattern>
          <type>INCLUDE</type>
        </hudson.plugins.ws__cleanup.Pattern>
      </patterns>
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <EnvInjectPasswordWrapper plugin="envinject@2.1.5">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jpass</name>
          <value>{AQAAABAAAAAQXNjvUH4fRyIwSDDeqY92RVwXuirIZjtpUTyML2biJkA=}</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.buildnamesetter.BuildNameSetter plugin="build-name-setter@1.6.9">
      <template>#${BUILD_NUMBER} - ${BUILD_LOG_REGEX, regex=&quot;^.*NEWTAG=(\S*)&quot;,substText=&quot;$1&quot;,showTruncatedLines=false}</template>
      <runAtStart>true</runAtStart>
      <runAtEnd>true</runAtEnd>
    </org.jenkinsci.plugins.buildnamesetter.BuildNameSetter>
  </buildWrappers>
</project>