<?xml version='1.0' encoding='UTF-8'?>
<project>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#list of branches from older to newer
declare -a SFB_branches=(&quot;non_lync&quot; &quot;3.0.1&quot; &quot;3.0.0_450HD&quot; &quot;3.0.2&quot;)
#if the current gerrit branch is the last on the list then exit:
#because there is no need to cherry pick it to anywhere
if [ &quot;${SFB_branches[${#SFB_branches[@]}-1]}&quot; == &quot;${GERRIT_BRANCH}&quot; ]; then exit 0; fi

url=&quot;https://gerrit/a/changes/?q=&quot;
vote=1
declare -a missingBranches

#loop the list
for i in &quot;${!SFB_branches[@]}&quot;; do
echo &quot;************   i = ${SFB_branches[$i]}  **************&quot;
   #find the gerrit branch in list
   if [[ &quot;${SFB_branches[$i]}&quot; = &quot;${GERRIT_BRANCH}&quot; ]]; then
echo &quot;************   is THE current branch  **************&quot;
       index=${i};
       continue;
   fi
   #if gerrit branch was already found, then check if current branch has change-ID
   if [[ $index ]]; then
      exist=$(curl -k -s --digest -u shukyr:$curl_pass $url$GERRIT_CHANGE_ID |grep -c &quot;\&quot;branch\&quot;: \&quot;${SFB_branches[$i]}\&quot;&quot; || true);
      if [[ &quot;$exist&quot; = &quot;0&quot; ]]; then
echo &quot;************ Change-ID was not found in branch ${SFB_branches[$i]} **************&quot;
      vote=-1;
      missingBranches+=(&quot;${SFB_branches[$i]}&quot;)
else
echo &quot;************ Change-ID does exist in branch ${SFB_branches[$i]} **************&quot;
fi
   fi
done

echo &quot;**** vote $vote in gerrit&quot;
echo &quot;**** message: these are the branched without cherry-pick:  ${missingBranches[@]}&quot;

#############################
#reply vote to gerrit
if [[ &quot;$vote&quot; = &quot;-1&quot; ]]; then
	ssh -p 29418 jenkins@gerrit gerrit review  --project tests/non_lync --message &quot;&apos;missing cherry-pick in branches: ${missingBranches[@]}&apos;&quot;  --label Cherry-Pick=-1 $GERRIT_PATCHSET_REVISION
else
	ssh -p 29418 jenkins@gerrit gerrit review  --project tests/non_lync --message &quot;&apos;No missing cherry-pick&apos;&quot; --label Cherry-Pick=1 $GERRIT_PATCHSET_REVISION
fi


</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <EnvInjectPasswordWrapper plugin="envinject@1.92.1">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>jenkins</name>
          <value>hx9lR62WXxrsR3VB0FO6jtVxmT/Tqzpo9b9/UNVFB0U=</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
  </buildWrappers>
</project>